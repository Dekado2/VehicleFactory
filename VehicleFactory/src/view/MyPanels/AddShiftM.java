/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.MyPanels;

import java.awt.Color;
import java.awt.Toolkit;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import model.AbstractEmployee;
import view.InputCheck;
import view.UserMenu;
import view.ViewLogic;

/**
 *
 *
 */
public class AddShiftM extends javax.swing.JPanel {
private static ViewLogic view;
private UserMenu um;

    /**
     * Creates new form AddShiftM
     */
    public AddShiftM(UserMenu um) {
        initComponents();
        view=ViewLogic.getInstance();
        this.um=um;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_AddShiftM = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        countryLabel = new javax.swing.JLabel();
        employmentDateLabel = new javax.swing.JLabel();
        bdayLabel = new javax.swing.JLabel();
        extraWageLabel = new javax.swing.JLabel();
        addPanel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        hourlyWageLabel = new javax.swing.JLabel();
        bdayComboBox = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        bmonthComboBox = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        byearComboBox = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        edayComboBox = new javax.swing.JComboBox<>();
        emonthComboBox = new javax.swing.JComboBox<>();
        eyearComboBox = new javax.swing.JComboBox<>();
        jSeparator4 = new javax.swing.JSeparator();
        idText = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        nameText = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        countryText = new javax.swing.JTextField();
        streetLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        hnLabel = new javax.swing.JLabel();
        zipLabel = new javax.swing.JLabel();
        jSeparator13 = new javax.swing.JSeparator();
        cityText = new javax.swing.JTextField();
        jSeparator14 = new javax.swing.JSeparator();
        streetText = new javax.swing.JTextField();
        jSeparator15 = new javax.swing.JSeparator();
        hnText = new javax.swing.JTextField();
        jSeparator16 = new javax.swing.JSeparator();
        zipText = new javax.swing.JTextField();
        jSeparator17 = new javax.swing.JSeparator();
        hourlyWageText = new javax.swing.JTextField();
        jSeparator18 = new javax.swing.JSeparator();
        extraWageText = new javax.swing.JTextField();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        Panel_AddShiftM.setBackground(new java.awt.Color(235, 255, 255));
        Panel_AddShiftM.setForeground(new java.awt.Color(255, 255, 255));

        nameLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(87, 84, 84));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/MyPanels/Bundle"); // NOI18N
        nameLabel.setText(bundle.getString("AddShiftM.nameLabel.text")); // NOI18N

        countryLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        countryLabel.setForeground(new java.awt.Color(87, 84, 84));
        countryLabel.setText(bundle.getString("AddShiftM.countryLabel.text")); // NOI18N

        employmentDateLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        employmentDateLabel.setForeground(new java.awt.Color(87, 84, 84));
        employmentDateLabel.setText(bundle.getString("AddShiftM.employmentDateLabel.text")); // NOI18N

        bdayLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        bdayLabel.setForeground(new java.awt.Color(87, 84, 84));
        bdayLabel.setText(bundle.getString("AddShiftM.bdayLabel.text")); // NOI18N

        extraWageLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        extraWageLabel.setForeground(new java.awt.Color(87, 84, 84));
        extraWageLabel.setText(bundle.getString("AddShiftM.extraWageLabel.text")); // NOI18N

        addPanel.setBackground(new java.awt.Color(204, 204, 204));
        addPanel.setForeground(new java.awt.Color(255, 255, 255));
        addPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addPanelMouseExited(evt);
            }
        });
        DocumentListener docListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                emptyFields(idText,nameText, countryText, cityText,streetText,hnText,zipText,hourlyWageText,extraWageText, addPanel);
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                emptyFields(idText,nameText, countryText, cityText,streetText,hnText,zipText,hourlyWageText,extraWageText, addPanel);
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                emptyFields(idText,nameText, countryText, cityText,streetText,hnText,zipText,hourlyWageText,extraWageText, addPanel);
            }
        };
        idText.getDocument().addDocumentListener(docListener);
        nameText.getDocument().addDocumentListener(docListener);
        countryText.getDocument().addDocumentListener(docListener);
        cityText.getDocument().addDocumentListener(docListener);
        streetText.getDocument().addDocumentListener(docListener);
        hnText.getDocument().addDocumentListener(docListener);
        zipText.getDocument().addDocumentListener(docListener);
        hourlyWageText.getDocument().addDocumentListener(docListener);
        extraWageText.getDocument().addDocumentListener(docListener);

        jLabel25.setFont(new java.awt.Font("Aharoni", 0, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText(bundle.getString("AddShiftM.jLabel25.text")); // NOI18N

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(76, 76, 76))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(11, 11, 11))
        );

        idLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        idLabel.setForeground(new java.awt.Color(87, 84, 84));
        idLabel.setText(bundle.getString("AddShiftM.idLabel.text")); // NOI18N

        hourlyWageLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        hourlyWageLabel.setForeground(new java.awt.Color(87, 84, 84));
        hourlyWageLabel.setText(bundle.getString("AddShiftM.hourlyWageLabel.text")); // NOI18N

        bdayComboBox.setBackground(new java.awt.Color(235, 255, 255));
        bdayComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bdayComboBox.setForeground(new java.awt.Color(102, 102, 102));
        bdayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        bdayComboBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        bdayComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bdayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdayComboBoxActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(87, 84, 84));
        jLabel30.setText(bundle.getString("AddShiftM.jLabel30.text")); // NOI18N

        jLabel31.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(87, 84, 84));
        jLabel31.setText(bundle.getString("AddShiftM.jLabel31.text")); // NOI18N

        bmonthComboBox.setBackground(new java.awt.Color(235, 255, 255));
        bmonthComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bmonthComboBox.setForeground(new java.awt.Color(102, 102, 102));
        bmonthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        bmonthComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bmonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmonthComboBoxActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(87, 84, 84));
        jLabel32.setText(bundle.getString("AddShiftM.jLabel32.text")); // NOI18N

        byearComboBox.setBackground(new java.awt.Color(235, 255, 255));
        byearComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        byearComboBox.setForeground(new java.awt.Color(102, 102, 102));
        byearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924", "1923", "1922", "1921", "1920", "1919", "1918", "1917", "1916", "1915", "1914", "1913", "1912", "1911", "1910", "1909", "1908", "1907", "1906", "1905", "1904", "1903", "1902", "1901", "1900" }));
        byearComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        byearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byearComboBoxActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(87, 84, 84));
        jLabel33.setText(bundle.getString("AddShiftM.jLabel33.text")); // NOI18N

        jLabel34.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(87, 84, 84));
        jLabel34.setText(bundle.getString("AddShiftM.jLabel34.text")); // NOI18N

        jLabel35.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(87, 84, 84));
        jLabel35.setText(bundle.getString("AddShiftM.jLabel35.text")); // NOI18N

        edayComboBox.setBackground(new java.awt.Color(235, 255, 255));
        edayComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        edayComboBox.setForeground(new java.awt.Color(102, 102, 102));
        edayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        edayComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        edayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edayComboBoxActionPerformed(evt);
            }
        });

        emonthComboBox.setBackground(new java.awt.Color(235, 255, 255));
        emonthComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        emonthComboBox.setForeground(new java.awt.Color(102, 102, 102));
        emonthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        emonthComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        emonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emonthComboBoxActionPerformed(evt);
            }
        });

        eyearComboBox.setBackground(new java.awt.Color(235, 255, 255));
        eyearComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        eyearComboBox.setForeground(new java.awt.Color(102, 102, 102));
        eyearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924", "1923", "1922", "1921", "1920", "1919", "1918", "1917", "1916", "1915", "1914", "1913", "1912", "1911", "1910", "1909", "1908", "1907", "1906", "1905", "1904", "1903", "1902", "1901", "1900" }));
        eyearComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        eyearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eyearComboBoxActionPerformed(evt);
            }
        });

        jSeparator4.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator4.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        idText.setBackground(new java.awt.Color(235, 255, 255));
        idText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        idText.setBorder(null);
        idText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextActionPerformed(evt);
            }
        });

        jSeparator5.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator5.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        nameText.setBackground(new java.awt.Color(235, 255, 255));
        nameText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        nameText.setBorder(null);
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        jSeparator6.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator6.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        countryText.setBackground(new java.awt.Color(235, 255, 255));
        countryText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        countryText.setBorder(null);
        countryText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryTextActionPerformed(evt);
            }
        });

        streetLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        streetLabel.setForeground(new java.awt.Color(87, 84, 84));
        streetLabel.setText(bundle.getString("AddShiftM.streetLabel.text")); // NOI18N

        cityLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        cityLabel.setForeground(new java.awt.Color(87, 84, 84));
        cityLabel.setText(bundle.getString("AddShiftM.cityLabel.text")); // NOI18N

        hnLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        hnLabel.setForeground(new java.awt.Color(87, 84, 84));
        hnLabel.setText(bundle.getString("AddShiftM.hnLabel.text")); // NOI18N

        zipLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        zipLabel.setForeground(new java.awt.Color(87, 84, 84));
        zipLabel.setText(bundle.getString("AddShiftM.zipLabel.text")); // NOI18N

        jSeparator13.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator13.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        cityText.setBackground(new java.awt.Color(235, 255, 255));
        cityText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cityText.setBorder(null);
        cityText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityTextActionPerformed(evt);
            }
        });

        jSeparator14.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator14.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        streetText.setBackground(new java.awt.Color(235, 255, 255));
        streetText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        streetText.setBorder(null);
        streetText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetTextActionPerformed(evt);
            }
        });

        jSeparator15.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator15.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        hnText.setBackground(new java.awt.Color(235, 255, 255));
        hnText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        hnText.setBorder(null);
        hnText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hnTextActionPerformed(evt);
            }
        });

        jSeparator16.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator16.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        zipText.setBackground(new java.awt.Color(235, 255, 255));
        zipText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        zipText.setBorder(null);
        zipText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipTextActionPerformed(evt);
            }
        });

        jSeparator17.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator17.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        hourlyWageText.setBackground(new java.awt.Color(235, 255, 255));
        hourlyWageText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        hourlyWageText.setBorder(null);
        hourlyWageText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hourlyWageTextActionPerformed(evt);
            }
        });

        jSeparator18.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator18.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        extraWageText.setBackground(new java.awt.Color(235, 255, 255));
        extraWageText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        extraWageText.setBorder(null);
        extraWageText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extraWageTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_AddShiftMLayout = new javax.swing.GroupLayout(Panel_AddShiftM);
        Panel_AddShiftM.setLayout(Panel_AddShiftMLayout);
        Panel_AddShiftMLayout.setHorizontalGroup(
            Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streetLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bdayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hourlyWageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employmentDateLabel)
                    .addComponent(extraWageLabel)
                    .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(countryLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                        .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(cityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idText)
                    .addComponent(nameText)
                    .addComponent(countryText)
                    .addComponent(cityText)
                    .addComponent(streetText)
                    .addComponent(hnText)
                    .addComponent(zipText)
                    .addComponent(hourlyWageText)
                    .addComponent(extraWageText)
                    .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                        .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(edayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(emonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eyearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator18, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bdayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bmonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(byearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 21, Short.MAX_VALUE)))
                .addContainerGap())
        );
        Panel_AddShiftMLayout.setVerticalGroup(
            Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                        .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                        .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(countryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                        .addComponent(countryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                        .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(streetLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                        .addComponent(streetText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                        .addComponent(hnText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(zipLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                        .addComponent(zipText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bdayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bmonthComboBox)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(byearComboBox)
                    .addComponent(bdayComboBox))
                .addGap(18, 18, 18)
                .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(hourlyWageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                        .addComponent(hourlyWageText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(edayComboBox)
                        .addComponent(emonthComboBox)
                        .addComponent(eyearComboBox))
                    .addComponent(employmentDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Panel_AddShiftMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(extraWageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_AddShiftMLayout.createSequentialGroup()
                        .addComponent(extraWageText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator18, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(81, 81, 81))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_AddShiftM, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_AddShiftM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bdayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bdayComboBoxActionPerformed

    private void bmonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmonthComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bmonthComboBoxActionPerformed

    private void byearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byearComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_byearComboBoxActionPerformed

    private void edayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edayComboBoxActionPerformed

    private void emonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emonthComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emonthComboBoxActionPerformed

    private void eyearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eyearComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eyearComboBoxActionPerformed

    private void idTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void countryTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countryTextActionPerformed

    private void cityTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityTextActionPerformed

    private void streetTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetTextActionPerformed

    private void hnTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hnTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hnTextActionPerformed

    private void zipTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipTextActionPerformed

    private void hourlyWageTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hourlyWageTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hourlyWageTextActionPerformed

    private void extraWageTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extraWageTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_extraWageTextActionPerformed

    private void addPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseClicked
        Integer hn=0;
       Double hourlyWage=0.0,extraWage=0.0;
     boolean bool;
     Color c=new Color(204,204,204);
     if (!addPanel.getBackground().equals(c))
     {
        hn=InputCheck.TryConvertingStringtoInteger(hnText.getText(), hn);
        if (hn==null)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, hnLabel.getText().substring(0, hnLabel.getText().length()-1) + "input must be a number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, hnLabel.getText().substring(0, hnLabel.getText().length()) + " חייב להיות מספר!");
            hnText.grabFocus();
        }
        else if (hn!=null && hn<=0)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, hnLabel.getText().substring(0, hnLabel.getText().length()-1) + "input must be a positive number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, hnLabel.getText().substring(0, hnLabel.getText().length()) + " חייב להיות מספר חיובי!");    
             hnText.grabFocus();
        }
        else if (hn!=null && hn>0)
        {
            hourlyWage=InputCheck.TryConvertingStringtoDouble(hourlyWageText.getText(), hourlyWage);
        if (hourlyWage==null)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, hourlyWageLabel.getText().substring(0, hourlyWageLabel.getText().length()-1) + "input must be a number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, hourlyWageLabel.getText().substring(0, hourlyWageLabel.getText().length()) + " חייב להיות מספר!");    
            hourlyWageText.grabFocus();
        }
        else if (hourlyWage!=null && hourlyWage<=0)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, hourlyWageLabel.getText().substring(0, hourlyWageLabel.getText().length()-1) + "input must be a positive number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, hourlyWageLabel.getText().substring(0, hourlyWageLabel.getText().length()) + " חייב להיות מספר חיובי!");    
            hourlyWageText.grabFocus();
        }
        else if (hourlyWage!=null && hourlyWage>0)
          {
            extraWage=InputCheck.TryConvertingStringtoDouble(extraWageText.getText(), extraWage);
        if (extraWage==null)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, extraWageLabel.getText().substring(0, extraWageLabel.getText().length()-1) + "input must be a number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, extraWageLabel.getText().substring(0, extraWageLabel.getText().length()) + " חייב להיות מספר!");    
            extraWageText.grabFocus();
        }
        else if (extraWage!=null && extraWage<=0)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, extraWageLabel.getText().substring(0, extraWageLabel.getText().length()-1) + "input must be a positive number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, extraWageLabel.getText().substring(0, extraWageLabel.getText().length()) + " חייב להיות מספר חיובי!");    
            extraWageText.grabFocus();
        }
        else if (extraWage!=null && extraWage>0)
        {
              Object[] options = {"Yes","No"};
              Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Adding confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות הוספה",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);    
              if (n==0)
              {
            String bstr=bdayComboBox.getSelectedItem().toString() + "/" + bmonthComboBox.getSelectedItem().toString() + "/" + byearComboBox.getSelectedItem().toString() + "T00:00";
            Date bd=InputCheck.TryConvertingStringtoDate(bstr);
            Calendar bcal=InputCheck.CalendarGetTimeDate(bd);
            if (bd==null || bcal==null){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                JOptionPane.showMessageDialog(null, "Invalid Birth Date!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "תאריך לידה שגוי!");
            }
            else
            {
            String estr=edayComboBox.getSelectedItem().toString() + "/" + emonthComboBox.getSelectedItem().toString() + "/" + eyearComboBox.getSelectedItem().toString() + "T00:00";
            Date ed=InputCheck.TryConvertingStringtoDate(estr);
            Calendar ecal=InputCheck.CalendarGetTimeDate(ed);
            if (ed==null || ecal==null){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                JOptionPane.showMessageDialog(null, "Invalid Employment Date!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "תאריך תחילת ההעסקה שגוי!");
            }
            else
            {
            bool=InputCheck.BirthdateBeforeEmployment(bcal, ecal);
            if (bool==false){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                JOptionPane.showMessageDialog(null, "Employment Date cannot be before Birthday!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "תאריך תחילת ההעסקה אינו יכול להיות לפני תאריך לידה!"); 
            }
            else
            {
            bool=InputCheck.IDLength(idText.getText());
            if (bool==false){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                JOptionPane.showMessageDialog(null, "ID's length must be 9 characters!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "מספר עובד חייב להיות באורך של 9 תווים!");
            }
            else
            {
            bool=view.controller.addShiftManager(idText.getText(),nameText.getText(),countryText.getText(),cityText.getText(),streetText.getText(),hn,zipText.getText(), bcal, ecal,hourlyWage,extraWage);
            if (bool==true)
            {
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, "Shift Manager added successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "מנהל המשמרת הוסף בהצלחה!");
            idText.setText("");
            nameText.setText("");
            countryText.setText("");
            cityText.setText("");
            streetText.setText("");
            hnText.setText("");
            zipText.setText("");
            bdayComboBox.setSelectedIndex(0);
            bmonthComboBox.setSelectedIndex(0);
            byearComboBox.setSelectedIndex(0);
            hourlyWageText.setText("");
            edayComboBox.setSelectedIndex(0);
            emonthComboBox.setSelectedIndex(0);
            eyearComboBox.setSelectedIndex(0);
            extraWageText.setText("");
            }
            else
             {
                AbstractEmployee ae=view.model.getEmployees().get(idText.getText());
                if (ae!=null)
                {
                    Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                JOptionPane.showMessageDialog(null, "Employee " + idText.getText() + " already exists!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "עובד " + idText.getText() + " כבר קיים!");
                idText.grabFocus();
                }
             }
            }
            }
              }
            }
          }
        }
     }
     }
     }
    }//GEN-LAST:event_addPanelMouseClicked

    private void addPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseEntered
        view.AddMouseEnter(addPanel);
    }//GEN-LAST:event_addPanelMouseEntered

    private void addPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseExited
        view.AddMouseExit(addPanel);
    }//GEN-LAST:event_addPanelMouseExited

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        idText.setText("");
        nameText.setText("");
        countryText.setText("");
        cityText.setText("");
        streetText.setText("");
        hnText.setText("");
        zipText.setText("");
        bdayComboBox.setSelectedIndex(0);
        bmonthComboBox.setSelectedIndex(0);
        byearComboBox.setSelectedIndex(0);
        hourlyWageText.setText("");
        edayComboBox.setSelectedIndex(0);
        emonthComboBox.setSelectedIndex(0);
        eyearComboBox.setSelectedIndex(0);
        extraWageText.setText("");
    }//GEN-LAST:event_formComponentHidden

private void emptyFields(JTextField field, JTextField  fieldtwo, JTextField  fieldthree ,JTextField  fieldfour ,JTextField  fieldfive, JTextField  fieldsix,JTextField  fieldseven,JTextField fieldeight,JTextField fieldnine, JPanel add){
             Color c=null;
             if (field.getText().isEmpty() || fieldtwo.getText().isEmpty() || fieldthree.getText().isEmpty() || fieldfour.getText().isEmpty() || fieldfive.getText().isEmpty() || fieldsix.getText().isEmpty() || fieldseven.getText().isEmpty() || fieldeight.getText().isEmpty() || fieldnine.getText().isEmpty())
             {
                 c=new Color(204,204,204);
                add.setBackground(c);
             }
                else
             {
                 c=new Color(0,102,102);
                add.setBackground(c);
             }
    }

    public JLabel getBdayLabel() {
        return bdayLabel;
    }

    public JLabel getCityLabel() {
        return cityLabel;
    }

    public JLabel getCountryLabel() {
        return countryLabel;
    }

    public JLabel getEmploymentDateLabel() {
        return employmentDateLabel;
    }

    public JLabel getExtraWageLabel() {
        return extraWageLabel;
    }

    public JLabel getHnLabel() {
        return hnLabel;
    }

    public JLabel getHourlyWageLabel() {
        return hourlyWageLabel;
    }

    public JLabel getIdLabel() {
        return idLabel;
    }

    public JLabel getjLabel30() {
        return jLabel30;
    }

    public JLabel getjLabel31() {
        return jLabel31;
    }

    public JLabel getjLabel32() {
        return jLabel32;
    }

    public JLabel getjLabel34() {
        return jLabel34;
    }

    public JLabel getjLabel35() {
        return jLabel35;
    }

    public JLabel getNameLabel() {
        return nameLabel;
    }

    public JLabel getStreetLabel() {
        return streetLabel;
    }

    public JLabel getZipLabel() {
        return zipLabel;
    }

    public JLabel getjLabel25() {
        return jLabel25;
    }

    public JLabel getjLabel33() {
        return jLabel33;
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel_AddShiftM;
    private javax.swing.JPanel addPanel;
    private javax.swing.JComboBox<String> bdayComboBox;
    private javax.swing.JLabel bdayLabel;
    private javax.swing.JComboBox<String> bmonthComboBox;
    private javax.swing.JComboBox<String> byearComboBox;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JTextField cityText;
    private javax.swing.JLabel countryLabel;
    private javax.swing.JTextField countryText;
    private javax.swing.JComboBox<String> edayComboBox;
    private javax.swing.JComboBox<String> emonthComboBox;
    private javax.swing.JLabel employmentDateLabel;
    private javax.swing.JLabel extraWageLabel;
    private javax.swing.JTextField extraWageText;
    private javax.swing.JComboBox<String> eyearComboBox;
    private javax.swing.JLabel hnLabel;
    private javax.swing.JTextField hnText;
    private javax.swing.JLabel hourlyWageLabel;
    private javax.swing.JTextField hourlyWageText;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idText;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameText;
    private javax.swing.JLabel streetLabel;
    private javax.swing.JTextField streetText;
    private javax.swing.JLabel zipLabel;
    private javax.swing.JTextField zipText;
    // End of variables declaration//GEN-END:variables
}
