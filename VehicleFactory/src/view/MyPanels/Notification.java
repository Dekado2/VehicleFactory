/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.MyPanels;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import utils.Constants;
import view.UserMenu;

/**
 *
 *
 */
public class Notification extends javax.swing.JPanel {
private UserMenu um;
    /**
     * Creates new form Notification
     * @param um
     */
    public Notification(UserMenu um) {
        initComponents();
        this.um=um;
        messageTextLimit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        messageLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageTextArea = new javax.swing.JTextArea();
        saveButton = new javax.swing.JButton();
        countLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(235, 255, 255));

        messageLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/MyPanels/Bundle"); // NOI18N
        messageLabel.setText(bundle.getString("Notification.messageLabel.text")); // NOI18N

        messageTextArea.setBackground(new java.awt.Color(235, 255, 255));
        messageTextArea.setColumns(20);
        messageTextArea.setRows(5);
        messageTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                messageTextAreaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(messageTextArea);

        saveButton.setBackground(new java.awt.Color(0, 102, 102));
        saveButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText(bundle.getString("Notification.saveButton.text")); // NOI18N
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        countLabel.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        countLabel.setText(bundle.getString("Notification.countLabel.text")); // NOI18N
        countLabel.setToolTipText(bundle.getString("Notification.countLabel.toolTipText")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                            .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(countLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(messageLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(saveButton))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(countLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );

        DocumentListener docListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                messageTextLimit();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                messageTextLimit();
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                messageTextLimit();
            }
        };
        messageTextArea.getDocument().addDocumentListener(docListener);
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        um.getAdminMessageText().setText(messageTextArea.getText());
    }//GEN-LAST:event_saveButtonActionPerformed

    private void messageTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_messageTextAreaKeyTyped
        if (messageTextArea.getText().length()>Constants.MaxCharLength)
            evt.consume();
    }//GEN-LAST:event_messageTextAreaKeyTyped

    public JTextArea getNotificationText() {
        return messageTextArea;
    }

    public JLabel getMessageLabel() {
        return messageLabel;
    }
    
    public JButton getSaveButton() {
        return saveButton;
    }

    public void messageTextLimit() {                                    
    String s=messageTextArea.getText();
   int l=s.length();
   int i=(Constants.MaxCharLength+1)-l;
   if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
   countLabel.setText(String.valueOf(i) + " Characters left");
   else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
   countLabel.setText("נותרו " + String.valueOf(i) + " תווים");
    }

    public JLabel getCountLabel() {
        return countLabel;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel countLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTextArea messageTextArea;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
