/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.MyPanels.update;

import java.awt.Color;
import java.awt.Toolkit;
import java.util.Calendar;
import java.util.Date;
import javax.swing.ButtonModel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import model.AbstractEmployee;
import model.Manufacturer;
import model.Order;
import model.ShiftManager;
import view.InputCheck;
import view.UserMenu;
import view.ViewLogic;

/**
 *
 *
 */
public class UpdateOrder extends javax.swing.JPanel {
private static ViewLogic view;
private UserMenu um;

    /**
     * Creates new form AddOrder
     */
    public UpdateOrder(UserMenu um) {
        initComponents();
        view=ViewLogic.getInstance();
        this.um=um;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        Panel_AddOrder = new javax.swing.JPanel();
        addPanel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        dayComboBox = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        monthComboBox = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        yearComboBox = new javax.swing.JComboBox<>();
        jSeparator4 = new javax.swing.JSeparator();
        orderNumberText = new javax.swing.JTextField();
        nameField6 = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        orderedFromNameText = new javax.swing.JTextField();
        dueDateLabel = new javax.swing.JLabel();
        orderedFromLabel = new javax.swing.JLabel();
        orderNumberLabel = new javax.swing.JLabel();
        m_btn = new javax.swing.JRadioButton();
        sm_btn2 = new javax.swing.JRadioButton();
        m_btn2 = new javax.swing.JRadioButton();
        sm_btn = new javax.swing.JRadioButton();
        orderedToLabel = new javax.swing.JLabel();
        orderedFromNameLabel = new javax.swing.JLabel();
        orderedToNameLabel = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        orderedToNameText = new javax.swing.JTextField();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        Panel_AddOrder.setBackground(new java.awt.Color(235, 255, 255));
        Panel_AddOrder.setForeground(new java.awt.Color(255, 255, 255));

        addPanel.setBackground(new java.awt.Color(204, 204, 204));
        addPanel.setForeground(new java.awt.Color(255, 255, 255));
        addPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addPanelMouseExited(evt);
            }
        });
        DocumentListener docListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                emptyFields(orderNumberText, orderedFromNameText, orderedToNameText,addPanel);
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                emptyFields(orderNumberText, orderedFromNameText, orderedToNameText,addPanel);
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                emptyFields(orderNumberText, orderedFromNameText, orderedToNameText,addPanel);
            }
        };
        orderNumberText.getDocument().addDocumentListener(docListener);
        orderedFromNameText.getDocument().addDocumentListener(docListener);
        orderedToNameText.getDocument().addDocumentListener(docListener);

        jLabel25.setFont(new java.awt.Font("Aharoni", 0, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/MyPanels/update/Bundle"); // NOI18N
        jLabel25.setText(bundle.getString("UpdateOrder.jLabel25.text")); // NOI18N

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(76, 76, 76))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(11, 11, 11))
        );

        dayComboBox.setBackground(new java.awt.Color(235, 255, 255));
        dayComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dayComboBox.setForeground(new java.awt.Color(102, 102, 102));
        dayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dayComboBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        dayComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayComboBoxActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(87, 84, 84));
        jLabel30.setText(bundle.getString("UpdateOrder.jLabel30.text")); // NOI18N

        jLabel31.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(87, 84, 84));
        jLabel31.setText(bundle.getString("UpdateOrder.jLabel31.text")); // NOI18N

        monthComboBox.setBackground(new java.awt.Color(235, 255, 255));
        monthComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        monthComboBox.setForeground(new java.awt.Color(102, 102, 102));
        monthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        monthComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        monthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthComboBoxActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(87, 84, 84));
        jLabel32.setText(bundle.getString("UpdateOrder.jLabel32.text")); // NOI18N

        yearComboBox.setBackground(new java.awt.Color(235, 255, 255));
        yearComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        yearComboBox.setForeground(new java.awt.Color(102, 102, 102));
        yearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924", "1923", "1922", "1921", "1920", "1919", "1918", "1917", "1916", "1915", "1914", "1913", "1912", "1911", "1910", "1909", "1908", "1907", "1906", "1905", "1904", "1903", "1902", "1901", "1900" }));
        yearComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        yearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearComboBoxActionPerformed(evt);
            }
        });

        jSeparator4.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator4.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        orderNumberText.setBackground(new java.awt.Color(235, 255, 255));
        orderNumberText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        orderNumberText.setBorder(null);
        orderNumberText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderNumberTextActionPerformed(evt);
            }
        });

        nameField6.setBackground(new java.awt.Color(235, 255, 255));
        nameField6.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        nameField6.setBorder(null);
        nameField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameField6ActionPerformed(evt);
            }
        });

        jSeparator6.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator6.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        orderedFromNameText.setBackground(new java.awt.Color(235, 255, 255));
        orderedFromNameText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        orderedFromNameText.setBorder(null);
        orderedFromNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderedFromNameTextActionPerformed(evt);
            }
        });

        dueDateLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        dueDateLabel.setForeground(new java.awt.Color(102, 102, 102));
        dueDateLabel.setText(bundle.getString("UpdateOrder.dueDateLabel.text")); // NOI18N

        orderedFromLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        orderedFromLabel.setForeground(new java.awt.Color(102, 102, 102));
        orderedFromLabel.setText(bundle.getString("UpdateOrder.orderedFromLabel.text")); // NOI18N

        orderNumberLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        orderNumberLabel.setForeground(new java.awt.Color(102, 102, 102));
        orderNumberLabel.setText(bundle.getString("UpdateOrder.orderNumberLabel.text")); // NOI18N

        m_btn.setBackground(new java.awt.Color(235, 255, 255));
        buttonGroup1.add(m_btn);
        m_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        m_btn.setForeground(new java.awt.Color(102, 102, 102));
        m_btn.setText(bundle.getString("UpdateOrder.m_btn.text")); // NOI18N
        m_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_btnActionPerformed(evt);
            }
        });

        sm_btn2.setBackground(new java.awt.Color(235, 255, 255));
        buttonGroup2.add(sm_btn2);
        sm_btn2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        sm_btn2.setForeground(new java.awt.Color(102, 102, 102));
        sm_btn2.setText(bundle.getString("UpdateOrder.sm_btn2.text")); // NOI18N
        sm_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm_btn2ActionPerformed(evt);
            }
        });

        m_btn2.setBackground(new java.awt.Color(235, 255, 255));
        buttonGroup2.add(m_btn2);
        m_btn2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        m_btn2.setForeground(new java.awt.Color(102, 102, 102));
        m_btn2.setSelected(true);
        m_btn2.setText(bundle.getString("UpdateOrder.m_btn2.text")); // NOI18N
        m_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_btn2ActionPerformed(evt);
            }
        });

        sm_btn.setBackground(new java.awt.Color(235, 255, 255));
        buttonGroup1.add(sm_btn);
        sm_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        sm_btn.setForeground(new java.awt.Color(102, 102, 102));
        sm_btn.setSelected(true);
        sm_btn.setText(bundle.getString("UpdateOrder.sm_btn.text")); // NOI18N
        sm_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sm_btnActionPerformed(evt);
            }
        });

        orderedToLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        orderedToLabel.setForeground(new java.awt.Color(102, 102, 102));
        orderedToLabel.setText(bundle.getString("UpdateOrder.orderedToLabel.text")); // NOI18N

        orderedFromNameLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        orderedFromNameLabel.setForeground(new java.awt.Color(102, 102, 102));
        orderedFromNameLabel.setText(bundle.getString("UpdateOrder.orderedFromNameLabel.text")); // NOI18N

        orderedToNameLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        orderedToNameLabel.setForeground(new java.awt.Color(102, 102, 102));
        orderedToNameLabel.setText(bundle.getString("UpdateOrder.orderedToNameLabel.text")); // NOI18N

        jSeparator7.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator7.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        orderedToNameText.setBackground(new java.awt.Color(235, 255, 255));
        orderedToNameText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        orderedToNameText.setBorder(null);
        orderedToNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderedToNameTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_AddOrderLayout = new javax.swing.GroupLayout(Panel_AddOrder);
        Panel_AddOrder.setLayout(Panel_AddOrderLayout);
        Panel_AddOrderLayout.setHorizontalGroup(
            Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(orderNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dueDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orderedFromLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(orderedToLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(orderedFromNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(orderedToNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                        .addGroup(Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orderedFromNameText)
                            .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                                .addGroup(Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                                        .addComponent(sm_btn)
                                        .addGap(40, 40, 40)
                                        .addComponent(m_btn))
                                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                                        .addComponent(jLabel31)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel30)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel32)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                                        .addComponent(sm_btn2)
                                        .addGap(42, 42, 42)
                                        .addComponent(m_btn2))
                                    .addComponent(orderNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameField6))
                    .addComponent(orderedToNameText)
                    .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        Panel_AddOrderLayout.setVerticalGroup(
            Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                        .addComponent(orderNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nameField6, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(85, 85, 85)
                                .addGroup(Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                                        .addComponent(orderedFromNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(orderedToLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(sm_btn2)
                                            .addComponent(m_btn2)))
                                    .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                                        .addComponent(orderedFromNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                                        .addComponent(orderedToNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(405, 405, 405))
                                    .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                                        .addComponent(orderedToNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(monthComboBox)
                                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(yearComboBox)
                                                .addComponent(dayComboBox))
                                            .addComponent(dueDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(Panel_AddOrderLayout.createSequentialGroup()
                        .addComponent(orderNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Panel_AddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sm_btn)
                                .addComponent(m_btn))
                            .addComponent(orderedFromLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(686, 686, 686)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_AddOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_AddOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void orderedFromNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderedFromNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderedFromNameTextActionPerformed

    private void nameField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameField6ActionPerformed

    private void orderNumberTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderNumberTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderNumberTextActionPerformed

    private void yearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearComboBoxActionPerformed

    private void monthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthComboBoxActionPerformed

    private void dayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayComboBoxActionPerformed

    private void orderedToNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderedToNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderedToNameTextActionPerformed

    private void sm_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm_btnActionPerformed
        if (sm_btn.isSelected())
        {
            m_btn2.setSelected(true);
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language")){
            orderedFromNameLabel.setText("Shift Manager ID");
            orderedToNameLabel.setText("Manufacturer Name");
            }
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית")){
            orderedFromNameLabel.setText("מספר מנהל משמרת");
            orderedToNameLabel.setText("שם יצרן");
            }
            orderedFromNameText.setText("");
            orderedToNameText.setText("");
        }
    }//GEN-LAST:event_sm_btnActionPerformed

    private void m_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_btnActionPerformed
        if (m_btn.isSelected())
        {
            sm_btn2.setSelected(true);
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language")){
            orderedFromNameLabel.setText("Manufacturer Name");
            orderedToNameLabel.setText("Shift Manager ID");
            }
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית")){
            orderedFromNameLabel.setText("שם יצרן");
            orderedToNameLabel.setText("מספר מנהל משמרת");   
            }
            orderedFromNameText.setText("");
            orderedToNameText.setText("");
        }
    }//GEN-LAST:event_m_btnActionPerformed

    private void sm_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sm_btn2ActionPerformed
        if (sm_btn2.isSelected())
        {
            m_btn.setSelected(true);
             if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language")){
            orderedFromNameLabel.setText("Manufacturer Name");
            orderedToNameLabel.setText("Shift Manager ID");
            }
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית")){
            orderedFromNameLabel.setText("שם יצרן");
            orderedToNameLabel.setText("מספר מנהל משמרת");   
            } 
            orderedFromNameText.setText("");
            orderedToNameText.setText("");
        }
    }//GEN-LAST:event_sm_btn2ActionPerformed

    private void m_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_btn2ActionPerformed
         if (m_btn2.isSelected())
        {
            sm_btn.setSelected(true);
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language")){
            orderedFromNameLabel.setText("Shift Manager ID");
            orderedToNameLabel.setText("Manufacturer Name");
            }
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית")){
            orderedFromNameLabel.setText("מספר מנהל משמרת");
            orderedToNameLabel.setText("שם יצרן");
            }
            orderedFromNameText.setText("");
            orderedToNameText.setText("");
        }
    }//GEN-LAST:event_m_btn2ActionPerformed

    private void addPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseClicked
     Integer ordernum=0;
     boolean bool;
     Color c=new Color(204,204,204);
     if (!addPanel.getBackground().equals(c))
     {
        ordernum=InputCheck.TryConvertingStringtoInteger(orderNumberText.getText(), ordernum);
        if (ordernum==null)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, orderNumberLabel.getText().substring(0, orderNumberLabel.getText().length()-1) + "input must be a number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, orderNumberLabel.getText().substring(0, orderNumberLabel.getText().length()) + " חייב להיות מספר!");
            orderNumberText.grabFocus();
        }
        else if (ordernum!=null && ordernum<=0)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, orderNumberLabel.getText().substring(0, orderNumberLabel.getText().length()-1) + "input must be a positive number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, orderNumberLabel.getText().substring(0, orderNumberLabel.getText().length()) + " חייב להיות מספר חיובי!");
            orderNumberText.grabFocus();
        }
        else if (ordernum!=null && ordernum>0)
        {
            Object[] options = {"Yes","No"};
              Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Updating confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות עדכון",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);
              if (n==0)
              {
            String str=dayComboBox.getSelectedItem().toString() + "/" + monthComboBox.getSelectedItem().toString() + "/" + yearComboBox.getSelectedItem().toString() + "T00:00";
            Date d=InputCheck.TryConvertingStringtoDate(str);
            Calendar cal=InputCheck.CalendarGetTimeDate(d);
            if (d==null || cal==null){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                JOptionPane.showMessageDialog(null, "Invalid Due Date!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "תאריך יעד שגוי!");
            }
            else
            {
                Order order=view.model.getOrders().get(ordernum);
                if (sm_btn.isSelected() && m_btn2.isSelected())
               {
                     AbstractEmployee sm=view.model.getEmployees().get(orderedFromNameText.getText());
                     Manufacturer manu=view.model.getManufacturers().get(orderedToNameText.getText());
                  if (sm==null)
                 {
                     Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                   JOptionPane.showMessageDialog(null, "Shift Manager " + orderedFromNameText.getText() + " does not exist!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "מנהל משמרת " + orderedFromNameText.getText() + " אינו קיים!");
                   orderedFromNameText.grabFocus();
                 }
                   else if (!(sm instanceof ShiftManager))
                 {
                    Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language")) 
                   JOptionPane.showMessageDialog(null, orderedFromNameText.getText() + " is not a Shift Manager!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, orderedFromNameText.getText() + " הוא לא מנהל משמרת!");
                   orderedFromNameText.grabFocus();
                 }
                   else if (manu==null)
                 {
                     Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language")) 
                   JOptionPane.showMessageDialog(null, "Manufacturer " + orderedToNameText.getText() + " does not exist!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "יצרן " + orderedToNameText.getText() + " אינו קיים!");
                   orderedToNameText.grabFocus();
                 }
                      else if (sm instanceof ShiftManager & manu!=null)
        {
        bool=view.controller.updateOrder(ordernum,orderedFromNameText.getText(),orderedToNameText.getText(),cal);
            if (bool==true)
            {   
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language")) 
              JOptionPane.showMessageDialog(null, "Order updated successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "ההזמנה עודכנה בהצלחה!");
              this.setVisible(false);
            UserMenu.getLabel_Add().setText("");
            }
          }
               }
               else if(m_btn.isSelected() && sm_btn2.isSelected())
               {
                   Manufacturer manu=view.model.getManufacturers().get(orderedFromNameText.getText()); 
                   AbstractEmployee sm=view.model.getEmployees().get(orderedToNameText.getText());
                 if (manu==null)
                 {
                     Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language")) 
                   JOptionPane.showMessageDialog(null, "Manufacturer " + orderedFromNameText.getText() + " does not exist!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "יצרן " + orderedFromNameText.getText() + " אינו קיים!");
                   orderedFromNameText.grabFocus();
                 }
                  else if (sm==null)
                 {
                   Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))  
                   JOptionPane.showMessageDialog(null, "Shift Manager " + orderedToNameText.getText() + " does not exist!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "מנהל המשמרת " + orderedToNameText.getText() + " אינו קיים!");
                   orderedToNameText.grabFocus();
                 }
                   else if (!(sm instanceof ShiftManager))
                 {
                     Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))  
                   JOptionPane.showMessageDialog(null, orderedToNameText.getText() + " is not a Shift Manager!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, orderedToNameText.getText() + " הוא לא מנהל משמרת!");
                   orderedToNameText.grabFocus();
                 }
                   else if (sm instanceof ShiftManager & manu!=null)
        {
            bool=view.controller.updateOrder(ordernum,orderedFromNameText.getText(),orderedToNameText.getText(),cal);
            if (bool==true)
            {   
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))  
              JOptionPane.showMessageDialog(null, "Order updated successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "ההזמנה עודכנה בהצלחה!");
              this.setVisible(false);
              UserMenu.getLabel_Add().setText("");
            }
          }
         }
         }
        }
       }
     }
    }//GEN-LAST:event_addPanelMouseClicked

    private void addPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseEntered
        view.AddMouseEnter(addPanel);
    }//GEN-LAST:event_addPanelMouseEntered

    private void addPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseExited
        view.AddMouseExit(addPanel);
    }//GEN-LAST:event_addPanelMouseExited

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        orderNumberText.setText("");
        sm_btn.setSelected(true);
        if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language")){
        orderedFromNameLabel.setText("Shift Manager ID");
        orderedToNameLabel.setText("Manufacturer Name");
        }
        else if (um.getLanguageComboBox().getSelectedItem().equals("עברית")){
        orderedFromNameLabel.setText("מספר מנהל משמרת");
        orderedToNameLabel.setText("שם יצרן");
        }
        orderedFromNameText.setText("");
        m_btn2.setSelected(true);
        orderedToNameText.setText("");
        dayComboBox.setSelectedIndex(0);
        monthComboBox.setSelectedIndex(0);
        yearComboBox.setSelectedIndex(3);
    }//GEN-LAST:event_formComponentHidden

private void emptyFields(JTextField field, JTextField  fieldtwo, JTextField fieldthree,JPanel add){
    
             Color c=null;
             if (field.getText().isEmpty() || fieldtwo.getText().isEmpty() || fieldthree.getText().isEmpty())
             {
                 c=new Color(204,204,204);
                add.setBackground(c);
             }
                else
             {
                 c=new Color(0,102,102);
                add.setBackground(c);
             }
}

    public JComboBox<String> getDayComboBox() {
        return dayComboBox;
    }

    public JRadioButton getM_btn() {
        return m_btn;
    }

    public JRadioButton getM_btn2() {
        return m_btn2;
    }

    public JComboBox<String> getMonthComboBox() {
        return monthComboBox;
    }

    public JTextField getOrderedToNameText() {
        return orderedToNameText;
    }

    public JRadioButton getSm_btn() {
        return sm_btn;
    }

    public JRadioButton getSm_btn2() {
        return sm_btn2;
    }

    public JComboBox<String> getYearComboBox() {
        return yearComboBox;
    }

    public JTextField getOrderNumberText() {
        return orderNumberText;
    }

    public JTextField getOrderedFromNameText() {
        return orderedFromNameText;
    }

    public JLabel getOrderedFromNameLabel() {
        return orderedFromNameLabel;
    }

    public JLabel getOrderedToNameLabel() {
        return orderedToNameLabel;
    }

    public JLabel getDueDateLabel() {
        return dueDateLabel;
    }

    public JLabel getjLabel25() {
        return jLabel25;
    }

    public JLabel getjLabel30() {
        return jLabel30;
    }

    public JLabel getjLabel31() {
        return jLabel31;
    }

    public JLabel getjLabel32() {
        return jLabel32;
    }

    public JLabel getOrderNumberLabel() {
        return orderNumberLabel;
    }

    public JLabel getOrderedFromLabel() {
        return orderedFromLabel;
    }

    public JLabel getOrderedToLabel() {
        return orderedToLabel;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel_AddOrder;
    private javax.swing.JPanel addPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> dayComboBox;
    private javax.swing.JLabel dueDateLabel;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JRadioButton m_btn;
    private javax.swing.JRadioButton m_btn2;
    private javax.swing.JComboBox<String> monthComboBox;
    private javax.swing.JTextField nameField6;
    private javax.swing.JLabel orderNumberLabel;
    private javax.swing.JTextField orderNumberText;
    private javax.swing.JLabel orderedFromLabel;
    private javax.swing.JLabel orderedFromNameLabel;
    private javax.swing.JTextField orderedFromNameText;
    private javax.swing.JLabel orderedToLabel;
    private javax.swing.JLabel orderedToNameLabel;
    private javax.swing.JTextField orderedToNameText;
    private javax.swing.JRadioButton sm_btn;
    private javax.swing.JRadioButton sm_btn2;
    private javax.swing.JComboBox<String> yearComboBox;
    // End of variables declaration//GEN-END:variables
}
