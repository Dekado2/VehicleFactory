/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.MyPanels.update;

import java.awt.Color;
import java.awt.Toolkit;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import model.Manufacturer;
import model.Order;
import model.ProductionPlan;
import model.ProductionPlanType;
import model.Vehicle;
import model.VehicleModel;
import view.InputCheck;
import view.UserMenu;
import view.ViewLogic;

/**
 *
 *
 */
public class UpdateVehicle extends javax.swing.JPanel {
private static ViewLogic view;
private UserMenu um;

    /**
     * Creates new form AddVehicle
     */
    public UpdateVehicle(UserMenu um) {
        initComponents();
        view=ViewLogic.getInstance();
        this.um=um;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Panel_AddPart = new javax.swing.JPanel();
        vinLabel = new javax.swing.JLabel();
        vinText = new javax.swing.JTextField();
        addPanel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        modelLabel = new javax.swing.JLabel();
        ppLabel = new javax.swing.JLabel();
        orderLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        modelText = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        ppText = new javax.swing.JTextField();
        modelLabel1 = new javax.swing.JLabel();
        productionRadioButton = new javax.swing.JRadioButton();
        orderRadioButton = new javax.swing.JRadioButton();
        orderText = new javax.swing.JTextField();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        Panel_AddPart.setBackground(new java.awt.Color(235, 255, 255));
        Panel_AddPart.setPreferredSize(new java.awt.Dimension(758, 300));

        vinLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        vinLabel.setForeground(new java.awt.Color(87, 84, 84));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/MyPanels/update/Bundle"); // NOI18N
        vinLabel.setText(bundle.getString("UpdateVehicle.vinLabel.text")); // NOI18N

        vinText.setBackground(new java.awt.Color(235, 255, 255));
        vinText.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        vinText.setBorder(null);
        vinText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vinTextActionPerformed(evt);
            }
        });

        addPanel.setBackground(new java.awt.Color(204, 204, 204));
        addPanel.setForeground(new java.awt.Color(255, 255, 255));
        addPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addPanelMouseExited(evt);
            }
        });
        DocumentListener docListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                emptyFields(vinText, modelText, ppText, orderText, addPanel);
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                emptyFields(vinText, modelText, ppText, orderText, addPanel);
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                emptyFields(vinText, modelText, ppText, orderText, addPanel);
            }
        };
        vinText.getDocument().addDocumentListener(docListener);
        modelText.getDocument().addDocumentListener(docListener);
        ppText.getDocument().addDocumentListener(docListener);
        orderText.getDocument().addDocumentListener(docListener);

        jLabel25.setFont(new java.awt.Font("Aharoni", 0, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText(bundle.getString("UpdateVehicle.jLabel25.text")); // NOI18N

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(76, 76, 76))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(11, 11, 11))
        );

        modelLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        modelLabel.setForeground(new java.awt.Color(87, 84, 84));
        modelLabel.setText(bundle.getString("UpdateVehicle.modelLabel.text")); // NOI18N

        ppLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        ppLabel.setForeground(new java.awt.Color(87, 84, 84));
        ppLabel.setText(bundle.getString("UpdateVehicle.ppLabel.text")); // NOI18N

        orderLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        orderLabel.setForeground(new java.awt.Color(87, 84, 84));
        orderLabel.setText(bundle.getString("UpdateVehicle.orderLabel.text")); // NOI18N

        jSeparator1.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator1.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N

        modelText.setBackground(new java.awt.Color(235, 255, 255));
        modelText.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        modelText.setBorder(null);
        modelText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelTextActionPerformed(evt);
            }
        });

        jSeparator4.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator4.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N

        jSeparator5.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator5.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N

        ppText.setBackground(new java.awt.Color(235, 255, 255));
        ppText.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        ppText.setBorder(null);
        ppText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppTextActionPerformed(evt);
            }
        });

        modelLabel1.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        modelLabel1.setForeground(new java.awt.Color(87, 84, 84));
        modelLabel1.setText(bundle.getString("UpdateVehicle.modelLabel1.text")); // NOI18N

        buttonGroup1.add(productionRadioButton);
        productionRadioButton.setSelected(true);
        productionRadioButton.setText(bundle.getString("UpdateVehicle.productionRadioButton.text")); // NOI18N
        productionRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productionRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(orderRadioButton);
        orderRadioButton.setText(bundle.getString("UpdateVehicle.orderRadioButton.text")); // NOI18N
        orderRadioButton.setSelected(false);
        orderRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderRadioButtonActionPerformed(evt);
            }
        });

        orderText.setBackground(new java.awt.Color(235, 255, 255));
        orderText.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        orderText.setText(bundle.getString("UpdateVehicle.orderText.text")); // NOI18N
        orderText.setBorder(null);
        orderText.setEnabled(false);
        orderText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_AddPartLayout = new javax.swing.GroupLayout(Panel_AddPart);
        Panel_AddPart.setLayout(Panel_AddPartLayout);
        Panel_AddPartLayout.setHorizontalGroup(
            Panel_AddPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_AddPartLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_AddPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_AddPartLayout.createSequentialGroup()
                        .addComponent(orderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(Panel_AddPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_AddPartLayout.createSequentialGroup()
                                .addComponent(orderText, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13))))
                    .addGroup(Panel_AddPartLayout.createSequentialGroup()
                        .addComponent(ppLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Panel_AddPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ppText, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Panel_AddPartLayout.createSequentialGroup()
                        .addGroup(Panel_AddPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Panel_AddPartLayout.createSequentialGroup()
                                .addGroup(Panel_AddPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(vinLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(modelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(84, 84, 84)
                                .addGroup(Panel_AddPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(vinText, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(modelText, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(Panel_AddPartLayout.createSequentialGroup()
                                .addComponent(modelLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(productionRadioButton)
                                .addGap(27, 27, 27)
                                .addComponent(orderRadioButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        Panel_AddPartLayout.setVerticalGroup(
            Panel_AddPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_AddPartLayout.createSequentialGroup()
                .addGroup(Panel_AddPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_AddPartLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(vinLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_AddPartLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(vinText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(Panel_AddPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(modelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_AddPartLayout.createSequentialGroup()
                        .addComponent(modelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_AddPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productionRadioButton)
                    .addComponent(orderRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Panel_AddPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_AddPartLayout.createSequentialGroup()
                        .addComponent(ppText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ppLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_AddPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_AddPartLayout.createSequentialGroup()
                        .addComponent(orderText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(orderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_AddPart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_AddPart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void vinTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vinTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vinTextActionPerformed

    private void modelTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modelTextActionPerformed

    private void ppTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ppTextActionPerformed

    private void addPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseClicked
     Integer serialnum=-1,ordernum=-1;
     boolean bool;
     Color c=new Color(204,204,204);
     if (!addPanel.getBackground().equals(c))
     {
         if (productionRadioButton.isSelected())
         {
        serialnum=InputCheck.TryConvertingStringtoInteger(ppText.getText(), serialnum);
        if (serialnum==null)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, ppLabel.getText().substring(0, ppLabel.getText().length()-1) + "input must be a number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, ppLabel.getText().substring(0, ppLabel.getText().length()) + " חייב להיות מספר!");
            ppText.grabFocus();
        }
        else if (serialnum!=null && serialnum<=0)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, ppLabel.getText().substring(0, ppLabel.getText().length()-1) + "input must be a positive number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, ppLabel.getText().substring(0, ppLabel.getText().length()) + " חייב להיות מספר חיובי!");    
            ppText.grabFocus();
        }
        else if (serialnum!=null && serialnum>0)
        {
              Object[] options = {"Yes","No"};
              Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Updating confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות עדכון",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);    
              if (n==0)
              {
            bool=InputCheck.VINLength(vinText.getText());
            if (bool==false){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                JOptionPane.showMessageDialog(null, "Vehicle's Length must be 17 characters!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "אורך מספר זיהוי הרכב חייב להיות בעל 17 תווים!");
            }
            else
            {
            bool=InputCheck.VINLetters(vinText.getText());
            if (bool==false){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                JOptionPane.showMessageDialog(null, "VIN must not contain the letters 'I' , 'O' , 'Q' !");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "מספר זיהוי הרכב אינו יכול להכיל את האותיות: I O Q !");
            }
            else
            {
            bool=view.controller.updateVehicle(vinText.getText(), modelText.getText(),serialnum,ordernum);
            if (bool==true)
            {
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              JOptionPane.showMessageDialog(null, "Vehicle updated successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "הרכב עודכן בהצלחה!");
              this.setVisible(false);
            UserMenu.getLabel_Add().setText("");
            }
            else
            {
                VehicleModel vm=view.model.getModels().get(modelText.getText());
                ProductionPlan pp=view.model.getProductionPlans().get(serialnum);
                if (vm==null)
                {
                    Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
             JOptionPane.showMessageDialog(null, "Vehicle Model " + modelText.getText() + " does not exist!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "דגם הרכב " + modelText.getText() + " אינו קיים!");
                 modelText.grabFocus();
                }
               else if (pp==null)
                {
                    Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
             JOptionPane.showMessageDialog(null, "Production Plan " + serialnum + " does not exist!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "תכנית היצור " + serialnum + " אינה קיימת!");
                 ppText.grabFocus();
                }
               else if (!pp.getType().equals(vm.getProductionPlanType()))
                {
                    Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
             JOptionPane.showMessageDialog(null, "Vehicle Model " + modelText.getText() + " cannot be produced with Production Plan " + serialnum + "!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "דגם הרכב " + modelText.getText() + " אינו יכול להיות מיוצר עם תכנית היצור " + serialnum + "!");
                 modelText.grabFocus();
                }
             }
            }
           }
          }
         }
        }
         else
         {
             ordernum=InputCheck.TryConvertingStringtoInteger(orderText.getText(), ordernum);
        if (ordernum==null)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, orderLabel.getText().substring(0, orderLabel.getText().length()-1) + "input must be a number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, orderLabel.getText().substring(0, orderLabel.getText().length()) + " חייב להיות מספר!");
            orderText.grabFocus();
        }
        else if (ordernum!=null && ordernum<=0)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, orderLabel.getText().substring(0, orderLabel.getText().length()-1) + "input must be a positive number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, orderLabel.getText().substring(0, orderLabel.getText().length()) + " חייב להיות מספר חיובי!");
            orderText.grabFocus();
        }
        else if (ordernum!=null && ordernum>0)
          {
              
              Object[] options = {"Yes","No"};
              Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Updating confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות עדכון",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);    
              if (n==0)
              {
            bool=InputCheck.VINLength(vinText.getText());
            if (bool==false){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                JOptionPane.showMessageDialog(null, "Vehicle's Length must be 17 characters!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "אורך מספר זיהוי הרכב חייב להיות בעל 17 תווים!");
            }
            else
            {
            bool=InputCheck.VINLetters(vinText.getText());
            if (bool==false){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                JOptionPane.showMessageDialog(null, "VIN must not contain the letters 'I' , 'O' , 'Q' !");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "מספר זיהוי הרכב אינו יכול להכיל את האותיות: I O Q !");
            }
            else
            {
            bool=view.controller.updateVehicle(vinText.getText(), modelText.getText(),serialnum,ordernum);
            if (bool==true)
            {
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              JOptionPane.showMessageDialog(null, "Vehicle updated successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "הרכב עודכן בהצלחה!");
              this.setVisible(false);
            UserMenu.getLabel_Add().setText("");
            }
             else
            {
                Vehicle vehicle=view.model.getVehicles().get(vinText.getText());
                VehicleModel vm=view.model.getModels().get(modelText.getText());
                Order<?,?> order=view.model.getOrders().get(ordernum);
                if (vm==null)
                {
                    Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
             JOptionPane.showMessageDialog(null, "Vehicle Model " + modelText.getText() + " does not exist!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "דגם הרכב " + modelText.getText() + " אינו קיים!");
                 modelText.grabFocus();
                }
                else if (order==null)
                {
                    Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
             JOptionPane.showMessageDialog(null, "Order Number " + ordernum + " does not exist!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
             JOptionPane.showMessageDialog(null, "מספר ההזמנה " + ordernum + " אינו קיים!");   
                 orderText.grabFocus();
                }
                else
                {
                    if (order.getOrderedFrom() instanceof Manufacturer)
                    {
                        if (!((Manufacturer)order.getOrderedFrom()).getProducedModels().contains(vm)) 
                        {
                            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                           JOptionPane.showMessageDialog(null, "Order " + ordernum + "'s Manufacturer cannot produce Vehicle Model " + modelText.getText() + "!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "היצרן של מספר הזמנה" + ordernum + " אינו יכול לייצר את דגם הרכב " + modelText.getText() + "!");
                           modelText.grabFocus();
                        }
                    }
                    else if (order.getOrderedTo() instanceof Manufacturer)
                    {
                       if (!((Manufacturer)order.getOrderedTo()).getProducedModels().contains(vm)) 
                        {
                             Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                           JOptionPane.showMessageDialog(null, "Order " + ordernum + "'s Manufacturer cannot produce Vehicle Model " + modelText.getText() + "!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "היצרן של מספר הזמנה" + ordernum + " אינו יכול לייצר את דגם הרכב " + modelText.getText() + "!");
                           modelText.grabFocus();
                        } 
                    }
                }
              }
            }
           }
          }
         } 
        } 
       }
    }//GEN-LAST:event_addPanelMouseClicked

    private void addPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseEntered
        view.AddMouseEnter(addPanel);
    }//GEN-LAST:event_addPanelMouseEntered

    private void addPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseExited
        view.AddMouseExit(addPanel);
    }//GEN-LAST:event_addPanelMouseExited

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        vinText.setText("");
        modelText.setText("");
        ppText.setText("");
        productionRadioButton.setSelected(true);
        ppText.setEnabled(true);
        orderText.setEnabled(false);
        orderText.setText("-1");
    }//GEN-LAST:event_formComponentHidden

    private void productionRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productionRadioButtonActionPerformed
                 if (productionRadioButton.isSelected())
                 {
                     ppText.setEnabled(true);
                     ppText.setText("");
                     orderText.setEnabled(false);
                     orderText.setText("-1");
                 }
                 else
                 {
                     ppText.setEnabled(false);
                     ppText.setText("-1");
                     orderText.setEnabled(true);
                     orderText.setText("");
                 }
    }//GEN-LAST:event_productionRadioButtonActionPerformed

    private void orderRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderRadioButtonActionPerformed
                 if (orderRadioButton.isSelected())
                 {
                     orderText.setEnabled(true);
                     orderText.setText("");
                     ppText.setEnabled(false);
                     ppText.setText("-1");
                     
                 }
                 else
                 {
                     orderText.setEnabled(false);
                     orderText.setText("-1");
                     ppText.setEnabled(true);
                     ppText.setText("");
                 }
    }//GEN-LAST:event_orderRadioButtonActionPerformed

    private void orderTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderTextActionPerformed

private void emptyFields(JTextField field, JTextField  fieldtwo,JTextField  fieldthree,JTextField  fieldfour, JPanel add){
             Color c=null;
             if (field.getText().isEmpty() || fieldtwo.getText().isEmpty() || fieldthree.getText().isEmpty() || fieldfour.getText().isEmpty())
             {
                 c=new Color(204,204,204);
                add.setBackground(c);
             }
                else
             {
                 c=new Color(0,102,102);
                add.setBackground(c);
             }
    }

    public JTextField getModelText() {
        return modelText;
    }

    public JRadioButton getOrderRadioButton() {
        return orderRadioButton;
    }

    public JTextField getPpText() {
        return ppText;
    }

    public JRadioButton getProductionRadioButton() {
        return productionRadioButton;
    }

    public JTextField getVinText() {
        return vinText;
    }

    public JTextField getOrderText() {
        return orderText;
    }

    public JLabel getjLabel25() {
        return jLabel25;
    }

    public JLabel getModelLabel() {
        return modelLabel;
    }

    public JLabel getModelLabel1() {
        return modelLabel1;
    }

    public JLabel getOrderLabel() {
        return orderLabel;
    }

    public JLabel getPpLabel() {
        return ppLabel;
    }

    public JLabel getVinLabel() {
        return vinLabel;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel_AddPart;
    private javax.swing.JPanel addPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel modelLabel;
    private javax.swing.JLabel modelLabel1;
    private javax.swing.JTextField modelText;
    private javax.swing.JLabel orderLabel;
    private javax.swing.JRadioButton orderRadioButton;
    private javax.swing.JTextField orderText;
    private javax.swing.JLabel ppLabel;
    private javax.swing.JTextField ppText;
    private javax.swing.JRadioButton productionRadioButton;
    private javax.swing.JLabel vinLabel;
    private javax.swing.JTextField vinText;
    // End of variables declaration//GEN-END:variables
}
