/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.MyPanels.update;

import java.awt.Color;
import java.awt.Toolkit;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import model.ProductionPlanType;
import view.InputCheck;
import view.ViewLogic;
import utils.E_VehicleType;
import view.UserMenu;

/**
 *
 *
 */
public class UpdateVehicleM extends javax.swing.JPanel {
private static ViewLogic view;
private UserMenu um;
    /**
     * Creates new form AddVehicleM
     */
    public UpdateVehicleM(UserMenu um) {
        initComponents();
        view=ViewLogic.getInstance();
        this.um=um;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Panel_Removeguard = new javax.swing.JPanel();
        addPanel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        dayComboBox = new javax.swing.JComboBox<>();
        monthComboBox = new javax.swing.JComboBox<>();
        yearComboBox = new javax.swing.JComboBox<>();
        jSeparator4 = new javax.swing.JSeparator();
        serialText = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        nameText = new javax.swing.JTextField();
        jSeparator13 = new javax.swing.JSeparator();
        hpText = new javax.swing.JTextField();
        jSeparator14 = new javax.swing.JSeparator();
        speedText = new javax.swing.JTextField();
        jSeparator15 = new javax.swing.JSeparator();
        seatsText = new javax.swing.JTextField();
        jSeparator17 = new javax.swing.JSeparator();
        productionCostText = new javax.swing.JTextField();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        productionCostLabel = new javax.swing.JLabel();
        hpLabel = new javax.swing.JLabel();
        enteredProductionLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        speedLabel = new javax.swing.JLabel();
        seatsLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        automaticLabel = new javax.swing.JLabel();
        serialLabel = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox<>();
        automaticCheckBox = new javax.swing.JCheckBox();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        Panel_Removeguard.setBackground(new java.awt.Color(235, 255, 255));
        Panel_Removeguard.setForeground(new java.awt.Color(255, 255, 255));

        addPanel.setBackground(new java.awt.Color(204, 204, 204));
        addPanel.setForeground(new java.awt.Color(255, 255, 255));
        addPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addPanelMouseExited(evt);
            }
        });
        DocumentListener docListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                emptyFields(serialText, nameText, hpText,speedText,seatsText,productionCostText, addPanel);
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                emptyFields(serialText, nameText, hpText,speedText,seatsText,productionCostText, addPanel);
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                emptyFields(serialText, nameText, hpText,speedText,seatsText,productionCostText, addPanel);
            }
        };
        serialText.getDocument().addDocumentListener(docListener);
        nameText.getDocument().addDocumentListener(docListener);
        hpText.getDocument().addDocumentListener(docListener);
        speedText.getDocument().addDocumentListener(docListener);
        seatsText.getDocument().addDocumentListener(docListener);
        productionCostText.getDocument().addDocumentListener(docListener);

        jLabel25.setFont(new java.awt.Font("Aharoni", 0, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/MyPanels/update/Bundle"); // NOI18N
        jLabel25.setText(bundle.getString("UpdateVehicleM.jLabel25.text")); // NOI18N

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(76, 76, 76))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(11, 11, 11))
        );

        jLabel38.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(87, 84, 84));
        jLabel38.setText(bundle.getString("UpdateVehicleM.jLabel38.text")); // NOI18N

        jLabel39.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(87, 84, 84));
        jLabel39.setText(bundle.getString("UpdateVehicleM.jLabel39.text")); // NOI18N

        jLabel40.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(87, 84, 84));
        jLabel40.setText(bundle.getString("UpdateVehicleM.jLabel40.text")); // NOI18N

        dayComboBox.setBackground(new java.awt.Color(235, 255, 255));
        dayComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dayComboBox.setForeground(new java.awt.Color(102, 102, 102));
        dayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dayComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayComboBoxActionPerformed(evt);
            }
        });

        monthComboBox.setBackground(new java.awt.Color(235, 255, 255));
        monthComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        monthComboBox.setForeground(new java.awt.Color(102, 102, 102));
        monthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        monthComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        monthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthComboBoxActionPerformed(evt);
            }
        });

        yearComboBox.setBackground(new java.awt.Color(235, 255, 255));
        yearComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        yearComboBox.setForeground(new java.awt.Color(102, 102, 102));
        yearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924", "1923", "1922", "1921", "1920", "1919", "1918", "1917", "1916", "1915", "1914", "1913", "1912", "1911", "1910", "1909", "1908", "1907", "1906", "1905", "1904", "1903", "1902", "1901", "1900" }));
        yearComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        yearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearComboBoxActionPerformed(evt);
            }
        });

        jSeparator4.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator4.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        serialText.setBackground(new java.awt.Color(235, 255, 255));
        serialText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        serialText.setBorder(null);
        serialText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serialTextActionPerformed(evt);
            }
        });

        jSeparator5.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator5.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        nameText.setBackground(new java.awt.Color(235, 255, 255));
        nameText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        nameText.setBorder(null);
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        jSeparator13.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator13.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        hpText.setBackground(new java.awt.Color(235, 255, 255));
        hpText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        hpText.setBorder(null);
        hpText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hpTextActionPerformed(evt);
            }
        });

        jSeparator14.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator14.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        speedText.setBackground(new java.awt.Color(235, 255, 255));
        speedText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        speedText.setBorder(null);
        speedText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speedTextActionPerformed(evt);
            }
        });

        jSeparator15.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator15.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        seatsText.setBackground(new java.awt.Color(235, 255, 255));
        seatsText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        seatsText.setBorder(null);
        seatsText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatsTextActionPerformed(evt);
            }
        });

        jSeparator17.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator17.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        productionCostText.setBackground(new java.awt.Color(235, 255, 255));
        productionCostText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        productionCostText.setBorder(null);
        productionCostText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productionCostTextActionPerformed(evt);
            }
        });

        productionCostLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        productionCostLabel.setForeground(new java.awt.Color(87, 84, 84));
        productionCostLabel.setText(bundle.getString("UpdateVehicleM.productionCostLabel.text")); // NOI18N

        hpLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        hpLabel.setForeground(new java.awt.Color(87, 84, 84));
        hpLabel.setText(bundle.getString("UpdateVehicleM.hpLabel.text")); // NOI18N

        enteredProductionLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        enteredProductionLabel.setForeground(new java.awt.Color(87, 84, 84));
        enteredProductionLabel.setText(bundle.getString("UpdateVehicleM.enteredProductionLabel.text")); // NOI18N

        nameLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(87, 84, 84));
        nameLabel.setText(bundle.getString("UpdateVehicleM.nameLabel.text")); // NOI18N

        speedLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        speedLabel.setForeground(new java.awt.Color(87, 84, 84));
        speedLabel.setText(bundle.getString("UpdateVehicleM.speedLabel.text")); // NOI18N

        seatsLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        seatsLabel.setForeground(new java.awt.Color(87, 84, 84));
        seatsLabel.setText(bundle.getString("UpdateVehicleM.seatsLabel.text")); // NOI18N

        typeLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        typeLabel.setForeground(new java.awt.Color(87, 84, 84));
        typeLabel.setText(bundle.getString("UpdateVehicleM.typeLabel.text")); // NOI18N

        automaticLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        automaticLabel.setForeground(new java.awt.Color(87, 84, 84));
        automaticLabel.setText(bundle.getString("UpdateVehicleM.automaticLabel.text")); // NOI18N

        serialLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        serialLabel.setForeground(new java.awt.Color(87, 84, 84));
        serialLabel.setText(bundle.getString("UpdateVehicleM.serialLabel.text")); // NOI18N

        jLayeredPane1.setLayer(productionCostLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(hpLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(enteredProductionLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(nameLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(speedLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(seatsLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(typeLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(automaticLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(serialLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(productionCostLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serialLabel)
                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(speedLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(typeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(automaticLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(hpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enteredProductionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(serialLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(typeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(hpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(speedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(seatsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(automaticLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(productionCostLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(enteredProductionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        typeComboBox.setBackground(new java.awt.Color(235, 255, 255));
        typeComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        typeComboBox.setForeground(new java.awt.Color(82, 80, 80));
        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MINI", "COMPACT", "MID", "FULL", "LUX", "SPORT", "SUPER", "VAN", "PICKUP", "SUV" }));
        typeComboBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        typeComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_RemoveguardLayout = new javax.swing.GroupLayout(Panel_Removeguard);
        Panel_Removeguard.setLayout(Panel_RemoveguardLayout);
        Panel_RemoveguardLayout.setHorizontalGroup(
            Panel_RemoveguardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_RemoveguardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(Panel_RemoveguardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serialText)
                    .addComponent(nameText)
                    .addComponent(seatsText)
                    .addComponent(productionCostText)
                    .addComponent(hpText)
                    .addComponent(speedText)
                    .addGroup(Panel_RemoveguardLayout.createSequentialGroup()
                        .addGroup(Panel_RemoveguardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Panel_RemoveguardLayout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel39)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Panel_RemoveguardLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(automaticCheckBox)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        Panel_RemoveguardLayout.setVerticalGroup(
            Panel_RemoveguardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_RemoveguardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(serialText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(hpText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(speedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(seatsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(automaticCheckBox)
                .addGap(26, 26, 26)
                .addComponent(productionCostText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Panel_RemoveguardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayComboBox)
                    .addComponent(monthComboBox)
                    .addComponent(yearComboBox))
                .addGap(50, 50, 50)
                .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
            .addComponent(jLayeredPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_Removeguard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_Removeguard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void productionCostTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productionCostTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productionCostTextActionPerformed

    private void seatsTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatsTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seatsTextActionPerformed

    private void speedTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speedTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_speedTextActionPerformed

    private void hpTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hpTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hpTextActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void serialTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serialTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serialTextActionPerformed

    private void yearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearComboBoxActionPerformed

    private void monthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthComboBoxActionPerformed

    private void dayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayComboBoxActionPerformed

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeComboBoxActionPerformed

    private void addPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseClicked
     Integer serialnumber=0,hp=0,speed=0,seats=0;
     Double productioncost=0.0;
     boolean bool;
     Color c=new Color(204,204,204);
     if (!addPanel.getBackground().equals(c))
     {
        serialnumber=InputCheck.TryConvertingStringtoInteger(serialText.getText(), serialnumber);
        if (serialnumber==null)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, serialLabel.getText().substring(0, serialLabel.getText().length()-1) + "input must be a number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, serialLabel.getText().substring(0, serialLabel.getText().length()) + " חייב להיות מספר!");
            serialText.grabFocus();
        }
        else if (serialnumber!=null && serialnumber<=0)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, serialLabel.getText().substring(0, serialLabel.getText().length()-1) + "input must be a positive number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, serialLabel.getText().substring(0, serialLabel.getText().length()) + " חייב להיות מספר חיובי!");    
             serialText.grabFocus();
        }
        else if (serialnumber!=null && serialnumber>0)
        {
            hp=InputCheck.TryConvertingStringtoInteger(hpText.getText(), hp);
        if (hp==null)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, hpLabel.getText().substring(0, hpLabel.getText().length()-1) + "input must be a number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, hpLabel.getText().substring(0, hpLabel.getText().length()) + " חייב להיות מספר!");
            hpText.grabFocus();
        }
        else if (hp!=null && hp<=0)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, hpLabel.getText().substring(0, hpLabel.getText().length()-1) + "input must be a positive number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, hpLabel.getText().substring(0, hpLabel.getText().length()) + " חייב להיות מספר חיובי!");    
            hpText.grabFocus();
        }
        else if (hp!=null && hp>0)
          {
              speed=InputCheck.TryConvertingStringtoInteger(speedText.getText(), speed);
              if (speed==null)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, speedLabel.getText().substring(0, speedLabel.getText().length()-1) + "input must be a number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, speedLabel.getText().substring(0, speedLabel.getText().length()) + " חייב להיות מספר!");
            speedText.grabFocus();
        }
        else if (speed!=null && speed<=0)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, speedLabel.getText().substring(0, speedLabel.getText().length()-1) + "input must be a positive number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, speedLabel.getText().substring(0, speedLabel.getText().length()) + " חייב להיות מספר חיובי!");
            speedText.grabFocus();
        }
        else if (speed!=null && speed>0)
        {
            seats=InputCheck.TryConvertingStringtoInteger(seatsText.getText(), seats);
              if (seats==null)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, seatsLabel.getText().substring(0, seatsLabel.getText().length()-1) + "input must be a number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, seatsLabel.getText().substring(0, seatsLabel.getText().length()) + " חייב להיות מספר!");    
            seatsText.grabFocus();
        }
        else if (seats!=null && seats<=0)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, seatsLabel.getText().substring(0, seatsLabel.getText().length()-1) + "input must be a positive number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, seatsLabel.getText().substring(0, seatsLabel.getText().length()) + " חייב להיות מספר חיובי!");   
            seatsText.grabFocus();
        }
        else if (seats!=null && seats>0)
        {
            productioncost=InputCheck.TryConvertingStringtoDouble(productionCostText.getText(), productioncost);
              if (productioncost==null)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, productionCostLabel.getText().substring(0, productionCostLabel.getText().length()-1) + "input must be a number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, productionCostLabel.getText().substring(0, productionCostLabel.getText().length()) + " חייב להיות מספר!");    
            productionCostText.grabFocus();
        }
        else if (productioncost!=null && productioncost<=0)
        {
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, productionCostLabel.getText().substring(0, productionCostLabel.getText().length()-1) + "input must be a positive number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, productionCostLabel.getText().substring(0, productionCostLabel.getText().length()) + " חייב להיות מספר חיובי!");    
            productionCostText.grabFocus();
        }
        else if (productioncost!=null && productioncost>0)
        {
              Object[] options = {"Yes","No"};
              Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Updating confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות עדכון",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);    
              if (n==0)
              {
            E_VehicleType e=null;
            e= InputCheck.TryConvertingStringtoVTEnum(typeComboBox.getSelectedItem().toString(), e);
            if (e==null)
            {
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
               JOptionPane.showMessageDialog(null, "Invalid Type!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "סוג שגוי!");
               typeComboBox.grabFocus();
            }
            else
            {
            String str=dayComboBox.getSelectedItem().toString() + "/" + monthComboBox.getSelectedItem().toString() + "/" + yearComboBox.getSelectedItem().toString() + "T00:00";
            Date d=InputCheck.TryConvertingStringtoDate(str);
            Calendar cal=InputCheck.CalendarGetTimeDate(d);
            if (d==null || cal==null){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                JOptionPane.showMessageDialog(null, "Invalid Date!");
             else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                 JOptionPane.showMessageDialog(null, "תאריך שגוי!");
            }
            else
            {
            bool=view.controller.updateVehicleModel(serialnumber,nameText.getText(), e, hp, speed, seats, automaticCheckBox.isSelected(),productioncost,cal);
            if (bool==true)
            {
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, "Vehicle Model updated successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, "דגם הרכב עודכן בהצלחה!");     
            this.setVisible(false);
            UserMenu.getLabel_Add().setText("");
            }
             else
             {
                ProductionPlanType ppt=view.model.getProductionPlanTypes().get(serialnumber);
                if (ppt==null)
                {
                    Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
             JOptionPane.showMessageDialog(null, "Production Plan Type " + serialnumber + " does not exist!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "סוג תכנית היצור " + serialnumber + " אינו קיים!");
             serialText.grabFocus();
                }
             }
            }
           }
         }
        }
        }
        }
        }
     }
    }
    }//GEN-LAST:event_addPanelMouseClicked

    private void addPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseEntered
        view.AddMouseEnter(addPanel);
    }//GEN-LAST:event_addPanelMouseEntered

    private void addPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseExited
        view.AddMouseExit(addPanel);
    }//GEN-LAST:event_addPanelMouseExited

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        serialText.setText("");
        nameText.setText("");
        typeComboBox.setSelectedIndex(0);
        hpText.setText("");
        speedText.setText("");
        seatsText.setText("");
        automaticCheckBox.setSelected(false);
        productionCostText.setText("");
        dayComboBox.setSelectedIndex(0);
        monthComboBox.setSelectedIndex(0);
        yearComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_formComponentHidden

private void emptyFields(JTextField field, JTextField  fieldtwo, JTextField  fieldthree ,JTextField  fieldfour ,JTextField  fieldfive, JTextField  fieldsix, JPanel add){
             Color c=null;
             if (field.getText().isEmpty() || fieldtwo.getText().isEmpty() || fieldthree.getText().isEmpty() || fieldfour.getText().isEmpty() || fieldfive.getText().isEmpty() || fieldsix.getText().isEmpty())
             {
                 c=new Color(204,204,204);
                add.setBackground(c);
             }
                else
             {
                 c=new Color(0,102,102);
                add.setBackground(c);
             }
    }

    public JCheckBox getAutomaticCheckBox() {
        return automaticCheckBox;
    }

    public JComboBox<String> getDayComboBox() {
        return dayComboBox;
    }

    public JTextField getHpText() {
        return hpText;
    }

    public JComboBox<String> getMonthComboBox() {
        return monthComboBox;
    }

    public JTextField getNameText() {
        return nameText;
    }

    public JTextField getProductionCostText() {
        return productionCostText;
    }

    public JTextField getSeatsText() {
        return seatsText;
    }

    public JTextField getSerialText() {
        return serialText;
    }

    public JTextField getSpeedText() {
        return speedText;
    }

    public JComboBox<String> getTypeComboBox() {
        return typeComboBox;
    }

    public JComboBox<String> getYearComboBox() {
        return yearComboBox;
    }

    public JLabel getAutomaticLabel() {
        return automaticLabel;
    }

    public JLabel getHpLabel() {
        return hpLabel;
    }

    public JLabel getjLabel25() {
        return jLabel25;
    }

    public JLabel getjLabel38() {
        return jLabel38;
    }

    public JLabel getjLabel39() {
        return jLabel39;
    }

    public JLabel getjLabel40() {
        return jLabel40;
    }

    public JLabel getNameLabel() {
        return nameLabel;
    }

    public JLabel getProductionCostLabel() {
        return productionCostLabel;
    }

    public JLabel getSeatsLabel() {
        return seatsLabel;
    }

    public JLabel getSerialLabel() {
        return serialLabel;
    }

    public JLabel getSpeedLabel() {
        return speedLabel;
    }

    public JLabel getTypeLabel() {
        return typeLabel;
    }

    public JLabel getEnteredProductionLabel() {
        return enteredProductionLabel;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel_Removeguard;
    private javax.swing.JPanel addPanel;
    private javax.swing.JCheckBox automaticCheckBox;
    private javax.swing.JLabel automaticLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> dayComboBox;
    private javax.swing.JLabel enteredProductionLabel;
    private javax.swing.JLabel hpLabel;
    private javax.swing.JTextField hpText;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JComboBox<String> monthComboBox;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameText;
    private javax.swing.JLabel productionCostLabel;
    private javax.swing.JTextField productionCostText;
    private javax.swing.JLabel seatsLabel;
    private javax.swing.JTextField seatsText;
    private javax.swing.JLabel serialLabel;
    private javax.swing.JTextField serialText;
    private javax.swing.JLabel speedLabel;
    private javax.swing.JTextField speedText;
    private javax.swing.JComboBox<String> typeComboBox;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JComboBox<String> yearComboBox;
    // End of variables declaration//GEN-END:variables
}
