/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.MyPanels.show;

import java.awt.Toolkit;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import view.InputCheck;
import view.UserMenu;
import view.ViewLogic;

/**
 *
 *
 */
public class ShowOrderMore extends javax.swing.JPanel {
    private static ViewLogic view1;
    private int orderNumber;
    private UserMenu um;
    /**
     * Creates new form ShowOrderMore
     */
    public ShowOrderMore(UserMenu um) {
        initComponents();
        view1=ViewLogic.getInstance();
        this.um=um;
        Add_btn1.setVisible(false);
        icon_plus.setVisible(false);
        icon_remove.setVisible(false);
        partsTableLayeredPane_add.setVisible(false);
    }
    public void setOrderNumber(int orderNumber){
        this.orderNumber=orderNumber;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        partsTableLayeredPane_add = new javax.swing.JLayeredPane();
        resTableScrollPane1 = new javax.swing.JScrollPane();
        partsTable = new javax.swing.JTable();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jComboBox1 = new javax.swing.JComboBox<>();
        Add_btn1 = new javax.swing.JPanel();
        btn_name = new javax.swing.JLabel();
        icon_plus = new javax.swing.JLabel();
        icon_remove = new javax.swing.JLabel();
        amountSeparator = new javax.swing.JSeparator();
        amountText = new javax.swing.JTextField();
        amountLabel = new javax.swing.JLabel();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(235, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(852, 901));
        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanel1formComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1formComponentShown(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(235, 255, 255));

        resTableScrollPane1.setBackground(new java.awt.Color(235, 255, 255));

        partsTable.setAutoCreateRowSorter(true);
        partsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Part Type Number", "Part Type Name", "Category", "Production Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        partsTable.setSelectionBackground(new java.awt.Color(76, 188, 188));
        partsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        partsTable.setShowHorizontalLines(false);
        partsTable.setShowVerticalLines(false);
        partsTable.getTableHeader().setReorderingAllowed(false);
        resTableScrollPane1.setViewportView(partsTable);
        partsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
                try{
                    partsTable.getValueAt(partsTable.getSelectedRow(), 0);
                    amountLabel.setVisible(true);
                    amountLabel.setEnabled(true);
                    amountText.setVisible(true);
                    amountText.setEnabled(true);
                    amountSeparator.setVisible(true);
                    amountSeparator.setEnabled(true);
                }
                catch (IndexOutOfBoundsException e){
                    amountLabel.setVisible(false);
                    amountLabel.setEnabled(false);
                    amountText.setVisible(false);
                    amountText.setEnabled(false);
                    amountSeparator.setVisible(false);
                    amountSeparator.setEnabled(false);
                }
            }
        });

        partsTableLayeredPane_add.setLayer(resTableScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout partsTableLayeredPane_addLayout = new javax.swing.GroupLayout(partsTableLayeredPane_add);
        partsTableLayeredPane_add.setLayout(partsTableLayeredPane_addLayout);
        partsTableLayeredPane_addLayout.setHorizontalGroup(
            partsTableLayeredPane_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(partsTableLayeredPane_addLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resTableScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        partsTableLayeredPane_addLayout.setVerticalGroup(
            partsTableLayeredPane_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(partsTableLayeredPane_addLayout.createSequentialGroup()
                .addComponent(resTableScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jComboBox1.setBackground(new java.awt.Color(0, 102, 102));
        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose one option", "Add Part", "Remove Part" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLayeredPane1.setLayer(jComboBox1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, 0, 272, Short.MAX_VALUE)
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        Add_btn1.setBackground(new java.awt.Color(0, 102, 102));
        Add_btn1.setForeground(new java.awt.Color(255, 255, 255));
        Add_btn1.setPreferredSize(new java.awt.Dimension(202, 50));
        Add_btn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Add_btn1MouseClicked(evt);
            }
        });

        btn_name.setFont(new java.awt.Font("Aharoni", 0, 24)); // NOI18N
        btn_name.setForeground(new java.awt.Color(255, 255, 255));
        btn_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        icon_plus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/001-signs.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/MyPanels/show/Bundle"); // NOI18N
        icon_plus.setText(bundle.getString("ShowOrderMore.icon_plus.text")); // NOI18N

        icon_remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/003-interface.png"))); // NOI18N
        icon_remove.setText(bundle.getString("ShowOrderMore.icon_remove.text")); // NOI18N

        javax.swing.GroupLayout Add_btn1Layout = new javax.swing.GroupLayout(Add_btn1);
        Add_btn1.setLayout(Add_btn1Layout);
        Add_btn1Layout.setHorizontalGroup(
            Add_btn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_btn1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(icon_remove)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_name, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(icon_plus)
                .addContainerGap())
        );
        Add_btn1Layout.setVerticalGroup(
            Add_btn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_btn1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Add_btn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Add_btn1Layout.createSequentialGroup()
                        .addComponent(btn_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(Add_btn1Layout.createSequentialGroup()
                        .addComponent(icon_plus, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                        .addGap(15, 15, 15))
                    .addGroup(Add_btn1Layout.createSequentialGroup()
                        .addComponent(icon_remove, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        amountSeparator.setForeground(new java.awt.Color(102, 102, 102));
        amountSeparator.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        amountSeparator.setVisible(false);
        amountSeparator.setEnabled(false);

        amountText.setBackground(new java.awt.Color(235, 255, 255));
        amountText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        amountText.setBorder(null);
        amountText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountTextActionPerformed(evt);
            }
        });
        amountText.setVisible(false);
        amountText.setEnabled(false);

        amountLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        amountLabel.setForeground(new java.awt.Color(87, 84, 84));
        amountLabel.setText(bundle.getString("ShowOrderMore.amountLabel.text")); // NOI18N
        amountLabel.setVisible(false);
        amountLabel.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(partsTableLayeredPane_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(amountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(amountSeparator)
                            .addComponent(amountText, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Add_btn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(partsTableLayeredPane_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(amountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(amountText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(amountSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(122, 122, 122)
                .addComponent(Add_btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(355, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 852, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 901, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        String txt= (String)jComboBox1.getSelectedItem();

        if(txt.equals("Add Part") || txt.equals("הוסף חלק")){
            Add_btn1.setVisible(true);
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            btn_name.setText("Add");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                btn_name.setText("הוסף");
            icon_plus.setVisible(true);
            icon_remove.setVisible(false);
            partsTableLayeredPane_add.setVisible(true);
           view1.AddPartToOrder(partsTable, orderNumber,um.getLanguageComboBox());
            amountText.setText("");

        }
        if(txt.equals("Remove Part") || txt.equals("הסר חלק")){
            Add_btn1.setVisible(true);
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            btn_name.setText("Remove");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                btn_name.setText("הסר");
            icon_plus.setVisible(false);
            icon_remove.setVisible(true);
            partsTableLayeredPane_add.setVisible(true);
            view1.removePartTypeFromOrder(partsTable, orderNumber,um.getLanguageComboBox());
             amountText.setText("");

        }
        if (txt.equals("Choose one option") || txt.equals("בחר אפשרות אחת")){
            Add_btn1.setVisible(false);
            Add_btn1.setEnabled(false);
            partsTableLayeredPane_add.setVisible(false);
             amountText.setText("");
             amountLabel.setVisible(false);
              amountLabel.setEnabled(false);
              amountText.setVisible(false);
              amountText.setEnabled(false);
              amountSeparator.setVisible(false);
              amountSeparator.setEnabled(false);
            
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jPanel1formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1formComponentHidden
        jComboBox1.setSelectedIndex(0);
        partsTable.clearSelection();
        amountText.setText("");
       
    }//GEN-LAST:event_jPanel1formComponentHidden

    private void jPanel1formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1formComponentShown

    }//GEN-LAST:event_jPanel1formComponentShown

    private void Add_btn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Add_btn1MouseClicked

        if((btn_name.getText().equals("Remove") && jComboBox1.getSelectedItem().equals("Remove Part")) || (btn_name.getText().equals("הסר") && jComboBox1.getSelectedItem().equals("הסר חלק"))){
            boolean bool=false;

            if (partsTable.getSelectedRow()==-1 ){
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, "You must select a part from the table!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "עליך לבחור חלק מהרשימה!");
            }
            else if (amountText.getText().isEmpty()){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, "You must input the desired quantity to be removed!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "עליך להזין את כמות החלקים הרצויה!");
                amountText.grabFocus();
            }
            else
            {
                Integer partnumber=0;
                partnumber=InputCheck.TryConvertingStringtoInteger(amountText.getText(), partnumber);
                if (partnumber==null)
                {
                    Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, amountLabel.getText().substring(0, amountLabel.getText().length()-1) + "input must be a number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, amountLabel.getText().substring(0, amountLabel.getText().length()) + " חייב להיות מספר!");
                    amountText.grabFocus();
                }
                else if (partnumber!=null && partnumber<=0)
                {
                    Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, amountLabel.getText().substring(0, amountLabel.getText().length()-1) + "input must be a positive number!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, amountLabel.getText().substring(0, amountLabel.getText().length()) + " חייב להיות מספר חיובי!");
                    amountText.grabFocus();
                }
                else if (partnumber!=null && partnumber>0)
                {
                    Object[] options = {"Yes","No"};
                    Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Removing confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות הסרה",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);
                    if (n==0)
                    {
                       
                        bool=view1.controller.removePartTypeFromOrder(orderNumber,(Integer)partsTable.getValueAt(partsTable.getSelectedRow(),0),partnumber);
                        if (bool==true)
                        {
                            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                        JOptionPane.showMessageDialog(null, "Part removed successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "החלק הוסר בהצלחה!");
                            view1.removePartTypeFromOrder(partsTable, orderNumber,um.getLanguageComboBox());
                            amountText.setText("");
                        }
                        else{
                            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                            JOptionPane.showMessageDialog(null, "You may remove a maximum of " + view1.model.getOrders().get(orderNumber).getParts().get(view1.model.getParts().get((Integer)partsTable.getValueAt(partsTable.getSelectedRow(),0))) + " parts!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "ניתן להסיר כמות מקסימאלית של " + view1.model.getOrders().get(orderNumber).getParts().get(view1.model.getParts().get((Integer)partsTable.getValueAt(partsTable.getSelectedRow(),0))) + " חלקים!");
                        }
                    }
                }
            }
        }
        else if((btn_name.getText().equals("Add") && jComboBox1.getSelectedItem().equals("Add Part")) || (btn_name.getText().equals("הוסף") && jComboBox1.getSelectedItem().equals("הוסף חלק"))){
            boolean bool=false;
            if (partsTable.getSelectedRow()==-1 ){
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, "You must select a part from the table!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "עליך לבחור חלק מהרשימה!");
            }
            else if (amountText.getText().isEmpty()){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, "You must input the desired quantity to be added!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "עליך להזין את כמות החלקים הרצויה!");
                amountText.grabFocus();
            }
            else
            {
                Integer partnumber=0;
                partnumber=InputCheck.TryConvertingStringtoInteger(amountText.getText(), partnumber);
                if (partnumber==null)
                {
                    JOptionPane.showMessageDialog(null, amountLabel.getText().substring(0, amountLabel.getText().length()-1) + "input must be a number!");
                    amountText.grabFocus();
                }
                else if (partnumber!=null && partnumber<=0)
                {
                    JOptionPane.showMessageDialog(null, amountLabel.getText().substring(0, amountLabel.getText().length()-1) + "input must be a positive number!");
                    amountText.grabFocus();
                }
                else if (partnumber!=null && partnumber>0)
                {
                    Object[] options = {"Yes","No"};
                    Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Adding confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות הוספה",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);
                    if (n==0)
                    {
                        bool=view1.controller.addPartTypeToOrder(orderNumber,(Integer)partsTable.getValueAt(partsTable.getSelectedRow(),0),partnumber);
                        if (bool==true)
                        {
                            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                        JOptionPane.showMessageDialog(null, "Part added successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "החלק הוסף בהצלחה!");
                            view1.AddPartToOrder(partsTable, orderNumber,um.getLanguageComboBox());
                            amountText.setText("");
                        }
                        else{
                        Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                    JOptionPane.showMessageDialog(null, "Part was not added!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "החלק לא הוסף!");
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_Add_btn1MouseClicked

    private void amountTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountTextActionPerformed

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        jComboBox1.setSelectedIndex(0);
        partsTable.clearSelection();
        amountText.setText("");
    }//GEN-LAST:event_formComponentHidden
    public JTable getPartsTable() {
        return partsTable;
    }

    public JLabel getAmountLabel() {
        return amountLabel;
    }

    public JLabel getBtn_name() {
        return btn_name;
    }

    public JComboBox<String> getjComboBox1() {
        return jComboBox1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Add_btn1;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JSeparator amountSeparator;
    private javax.swing.JTextField amountText;
    private javax.swing.JLabel btn_name;
    private javax.swing.JLabel icon_plus;
    private javax.swing.JLabel icon_remove;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTable partsTable;
    private javax.swing.JLayeredPane partsTableLayeredPane_add;
    private javax.swing.JScrollPane resTableScrollPane1;
    // End of variables declaration//GEN-END:variables
}
