/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.MyPanels.show;

import java.awt.Toolkit;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.VehicleModel;
import utils.E_PartCategory;
import view.GenericTable;
import view.InputCheck;
import view.UserMenu;
import view.ViewLogic;

/**
 *
 *
 */
public class ShowManufacturersMoreDetails extends javax.swing.JPanel {
private static ViewLogic view;
private String manuName;
private UserMenu um;
    /**
     * Creates new form ShowManufacturersMoreDetails
     */
    public ShowManufacturersMoreDetails(UserMenu um) {
        initComponents();
        view=ViewLogic.getInstance();
        this.um=um;
        icon_plus.setVisible(false);
        icon_remove.setVisible(false);
        Add_btn1.setVisible(false);
        partsTableLayeredPane_add.setVisible(false);
        modelsTableLayeredPane_add.setVisible(false);
       
       
                                     
    }

    public void setManuName(String manuName) {
        this.manuName = manuName;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        partsTableLayeredPane_add = new javax.swing.JLayeredPane();
        resTableScrollPane1 = new javax.swing.JScrollPane();
        partsTable = new javax.swing.JTable();
        modelsTableLayeredPane_add = new javax.swing.JLayeredPane();
        AddModelScrollPane = new javax.swing.JScrollPane();
        modelsTable = new javax.swing.JTable();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jComboBox1 = new javax.swing.JComboBox<>();
        Add_btn1 = new javax.swing.JPanel();
        btn_name = new javax.swing.JLabel();
        icon_plus = new javax.swing.JLabel();
        icon_remove = new javax.swing.JLabel();

        setBackground(new java.awt.Color(235, 255, 255));
        setPreferredSize(new java.awt.Dimension(852, 901));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(235, 255, 255));

        resTableScrollPane1.setBackground(new java.awt.Color(235, 255, 255));

        partsTable.setAutoCreateRowSorter(true);
        partsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Part Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        partsTable.setSelectionBackground(new java.awt.Color(76, 188, 188));
        partsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        partsTable.setShowHorizontalLines(false);
        partsTable.setShowVerticalLines(false);
        partsTable.getTableHeader().setReorderingAllowed(false);
        resTableScrollPane1.setViewportView(partsTable);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/MyPanels/show/Bundle"); // NOI18N
        if (partsTable.getColumnModel().getColumnCount() > 0) {
            partsTable.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("ShowManufacturersMoreDetails.partsTable.columnModel.title0")); // NOI18N
        }

        partsTableLayeredPane_add.setLayer(resTableScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout partsTableLayeredPane_addLayout = new javax.swing.GroupLayout(partsTableLayeredPane_add);
        partsTableLayeredPane_add.setLayout(partsTableLayeredPane_addLayout);
        partsTableLayeredPane_addLayout.setHorizontalGroup(
            partsTableLayeredPane_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(partsTableLayeredPane_addLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resTableScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        partsTableLayeredPane_addLayout.setVerticalGroup(
            partsTableLayeredPane_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(partsTableLayeredPane_addLayout.createSequentialGroup()
                .addComponent(resTableScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        modelsTableLayeredPane_add.setBackground(new java.awt.Color(235, 255, 255));

        AddModelScrollPane.setBackground(new java.awt.Color(235, 255, 255));

        modelsTable.setAutoCreateRowSorter(true);
        modelsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Model Name", "Vehicle Type", "HP", "Top Speed", "Number of Seats", "Automatic", "Production Cost", "Entered Production", "Production Plan Type - Serial Number", "Production Plan Type - Number of Slots"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Double.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        modelsTable.setSelectionBackground(new java.awt.Color(76, 188, 188));
        modelsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        modelsTable.setShowHorizontalLines(false);
        modelsTable.setShowVerticalLines(false);
        modelsTable.getTableHeader().setReorderingAllowed(false);
        AddModelScrollPane.setViewportView(modelsTable);

        modelsTableLayeredPane_add.setLayer(AddModelScrollPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout modelsTableLayeredPane_addLayout = new javax.swing.GroupLayout(modelsTableLayeredPane_add);
        modelsTableLayeredPane_add.setLayout(modelsTableLayeredPane_addLayout);
        modelsTableLayeredPane_addLayout.setHorizontalGroup(
            modelsTableLayeredPane_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
            .addGroup(modelsTableLayeredPane_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(modelsTableLayeredPane_addLayout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(AddModelScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(42, Short.MAX_VALUE)))
        );
        modelsTableLayeredPane_addLayout.setVerticalGroup(
            modelsTableLayeredPane_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 177, Short.MAX_VALUE)
            .addGroup(modelsTableLayeredPane_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(modelsTableLayeredPane_addLayout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addComponent(AddModelScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jComboBox1.setBackground(new java.awt.Color(0, 102, 102));
        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose one option", "Add Model", "Add Part Category", "Remove Model", "Remove Part Category" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLayeredPane1.setLayer(jComboBox1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, 0, 272, Short.MAX_VALUE)
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        Add_btn1.setBackground(new java.awt.Color(0, 102, 102));
        Add_btn1.setForeground(new java.awt.Color(255, 255, 255));
        Add_btn1.setPreferredSize(new java.awt.Dimension(202, 50));
        Add_btn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Add_btn1MouseClicked(evt);
            }
        });

        btn_name.setFont(new java.awt.Font("Aharoni", 0, 24)); // NOI18N
        btn_name.setForeground(new java.awt.Color(255, 255, 255));
        btn_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        icon_plus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/001-signs.png"))); // NOI18N
        icon_plus.setText(bundle.getString("ShowManufacturersMoreDetails.icon_plus.text")); // NOI18N

        icon_remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/003-interface.png"))); // NOI18N
        icon_remove.setText(bundle.getString("ShowManufacturersMoreDetails.icon_remove.text")); // NOI18N

        javax.swing.GroupLayout Add_btn1Layout = new javax.swing.GroupLayout(Add_btn1);
        Add_btn1.setLayout(Add_btn1Layout);
        Add_btn1Layout.setHorizontalGroup(
            Add_btn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_btn1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(icon_remove)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_name, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(icon_plus)
                .addContainerGap())
        );
        Add_btn1Layout.setVerticalGroup(
            Add_btn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_btn1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Add_btn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Add_btn1Layout.createSequentialGroup()
                        .addComponent(btn_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(Add_btn1Layout.createSequentialGroup()
                        .addComponent(icon_plus, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                        .addGap(15, 15, 15))
                    .addGroup(Add_btn1Layout.createSequentialGroup()
                        .addComponent(icon_remove, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(partsTableLayeredPane_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(modelsTableLayeredPane_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(Add_btn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(partsTableLayeredPane_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modelsTableLayeredPane_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(Add_btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(343, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
     modelsTable.clearSelection();
     partsTable.clearSelection();
     jComboBox1.setSelectedIndex(0);
    }//GEN-LAST:event_formComponentHidden

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        
    }//GEN-LAST:event_formComponentShown

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
              String txt= (String)jComboBox1.getSelectedItem();
        if(txt.equals("Add Model") || txt.equals("הוסף דגם")){
            Add_btn1.setVisible(true);
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            btn_name.setText("Add");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                btn_name.setText("הוסף");
            icon_remove.setVisible(false);icon_plus.setVisible(true);
            partsTableLayeredPane_add.setVisible(false);
            modelsTableLayeredPane_add.setVisible(true);
            view.AddModelsToManufacturers(modelsTable, manuName,um.getLanguageComboBox());
            
        }
        if(txt.equals("Add Part Category") || txt.equals("הוסף קטגוריית חלק")){
            Add_btn1.setVisible(true);
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            btn_name.setText("Add");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                btn_name.setText("הוסף");
            icon_remove.setVisible(false);icon_plus.setVisible(true);
            partsTableLayeredPane_add.setVisible(true);
            modelsTableLayeredPane_add.setVisible(false);
            view.AddPartsToManufacturers(partsTable, manuName,um.getLanguageComboBox());
            
            
        }
        if(txt.equals("Remove Model") || txt.equals("הסר דגם")){
            Add_btn1.setVisible(true);
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            btn_name.setText("Remove");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                btn_name.setText("הסר");
            icon_plus.setVisible(false);icon_remove.setVisible(true);
            partsTableLayeredPane_add.setVisible(false);
            modelsTableLayeredPane_add.setVisible(true);
            view.RemoveModelsFromManufacturers(modelsTable, manuName,um.getLanguageComboBox());
        }
        if(txt.equals("Remove Part Category") || txt.equals("הסר קטגוריית חלק")){
            Add_btn1.setVisible(true);
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            btn_name.setText("Remove");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                btn_name.setText("הסר");
            icon_plus.setVisible(false);icon_remove.setVisible(true);
            partsTableLayeredPane_add.setVisible(true);
            modelsTableLayeredPane_add.setVisible(false);
           view.RemovePartsFromManufacturers(partsTable, manuName,um.getLanguageComboBox());
            
        }
          if (txt.equals("Choose one option") || txt.equals("בחר אפשרות אחת")){
            Add_btn1.setVisible(false);
            modelsTableLayeredPane_add.setVisible(false);
            partsTableLayeredPane_add.setVisible(false);
        } 
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void Add_btn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Add_btn1MouseClicked
      
        if((btn_name.getText().equals("Remove") && jComboBox1.getSelectedItem().equals("Remove Model")) ||  (btn_name.getText().equals("הסר") && jComboBox1.getSelectedItem().equals("הסר דגם"))){
              boolean bool=false;
        if (modelsTable.getSelectedRow()==-1 ){
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, "You must select a vehicle model from the table!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
            JOptionPane.showMessageDialog(null, "עליך לבחור דגם רכב מהטבלה!");    
        }
        else
        {
            Object[] options = {"Yes","No"};
              Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Removing confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות הסרה",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);
              if (n==0)
                
              {
            bool=view.controller.removeModelFromManufacturer(modelsTable.getValueAt(modelsTable.getSelectedRow(), 0).toString(),manuName);
              if (bool==true)
              {
                  Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                  JOptionPane.showMessageDialog(null, "Model removed successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                  JOptionPane.showMessageDialog(null, "המודל הוסר בהצלחה!");
                  view.RemoveModelsFromManufacturers(modelsTable, manuName,um.getLanguageComboBox());

              }
              else{
                  Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                  JOptionPane.showMessageDialog(null, "Model was not removed!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "המודל לא הוסר!");
              }
              }
        }
       }
        else if((btn_name.getText().equals("Remove") && jComboBox1.getSelectedItem().equals("Remove Part Category")) || (btn_name.getText().equals("הסר") && jComboBox1.getSelectedItem().equals("הסר קטגוריית חלק"))){
              boolean bool=false;
        if (partsTable.getSelectedRow()==-1 ){
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, "You must select a part category from the table!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "עליך לבחור קטגוריית חלק מהטבלה!");
        }
        else
        {
            Object[] options = {"Yes","No"};
              Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Removing confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות הסרה",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);
              if (n==0)
                
              {
           
            bool=view.controller.removePartCategoryFromManufacturer(manuName, utils.E_PartCategory.valueOf((String)partsTable.getValueAt(partsTable.getSelectedRow(), 0).toString())) ;
              if (bool==true)
              {
                  Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                  JOptionPane.showMessageDialog(null, "Part category removed successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "קטגוריית חלק הוסרה בהצלחה!");
                  view.RemovePartsFromManufacturers(partsTable, manuName,um.getLanguageComboBox());

              }
              else{
                  Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                  JOptionPane.showMessageDialog(null, "Part category was not removed!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "קטגוריית חלק לא הוסרה!");
              }
              }
        }
       }
        else if((btn_name.getText().equals("Add") && jComboBox1.getSelectedItem().equals("Add Model")) || (btn_name.getText().equals("הוסף") && jComboBox1.getSelectedItem().equals("הוסף דגם"))){
              boolean bool=false;
        if (modelsTable.getSelectedRow()==-1 ){
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, "You must select a vehicle model from the table!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "עליך לבחור דגם רכב מהטבלה!");
        }
        else
        {
            Object[] options = {"Yes","No"};
              Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Adding confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות הוספה",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);
              if (n==0)
                
              {
            bool=view.controller.addModelToManufacturer(modelsTable.getValueAt(modelsTable.getSelectedRow(), 0).toString(),manuName);
              if (bool==true)
              {
                  Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                  JOptionPane.showMessageDialog(null, "Model added successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "הדגם הוסף בהצלחה!");
                  view.AddModelsToManufacturers(modelsTable, manuName,um.getLanguageComboBox());
              }
              else{
                  Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                  JOptionPane.showMessageDialog(null, "Model was not added!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "הדגם לא הוסף!");
              }
              }
        }
       }
        else if((btn_name.getText().equals("Add") && jComboBox1.getSelectedItem().equals("Add Part Category")) || (btn_name.getText().equals("הוסף") && jComboBox1.getSelectedItem().equals("הוסף קטגוריית חלק"))){
            boolean bool=false;
            if (partsTable.getSelectedRow()==-1 ){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                 JOptionPane.showMessageDialog(null, "You must select a part category from the table!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "עליך לבחור קטגוריית חלק מהרשימה!");
            }
            else
            {
            Object[] options = {"Yes","No"};
            Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Adding confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות הוספה",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);
                 if (n==0)
                 {
                  bool=view.controller.addPartCategoryToManufacturer(manuName,utils.E_PartCategory.valueOf((String)partsTable.getValueAt(partsTable.getSelectedRow(), 0).toString()));
                      if (bool==true)
                      {
                          Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                        JOptionPane.showMessageDialog(null, "Part category added successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "קטגוריית חלק הוספה בהצלחה!");
                        view.AddPartsToManufacturers(partsTable, manuName,um.getLanguageComboBox());

                      }
                      else{
                          Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                        JOptionPane.showMessageDialog(null, "Part category was not added!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "קטגוריית חלק לא הוספה!");
                      }
                 }
             }
       }
    }//GEN-LAST:event_Add_btn1MouseClicked
    public JTable getModelsTable() {
        return modelsTable;
    }

        
    public JTable getPartsTable() {
        return partsTable;
    }

    public JLabel getBtn_name() {
        return btn_name;
    }

    public JComboBox<String> getjComboBox1() {
        return jComboBox1;
    }

 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane AddModelScrollPane;
    private javax.swing.JPanel Add_btn1;
    private javax.swing.JLabel btn_name;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel icon_plus;
    private javax.swing.JLabel icon_remove;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTable modelsTable;
    private javax.swing.JLayeredPane modelsTableLayeredPane_add;
    private javax.swing.JTable partsTable;
    private javax.swing.JLayeredPane partsTableLayeredPane_add;
    private javax.swing.JScrollPane resTableScrollPane1;
    // End of variables declaration//GEN-END:variables
}
