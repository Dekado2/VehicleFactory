/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.MyPanels.show;

import java.awt.Toolkit;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import view.UserMenu;
import view.ViewLogic;

/**
 *
 *
 */
public class ShowOrders extends javax.swing.JPanel {
private static ViewLogic view;
private UserMenu um;
    /**
     * Creates new form ShowOrders
     */
    public ShowOrders(UserMenu um) {
        initComponents();
        view=ViewLogic.getInstance();
        this.um=um;
        view.ShowDataOrders(resTableSales,resTablePurchases,um.getLanguageComboBox());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the
     * Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableLayeredPane = new javax.swing.JLayeredPane();
        salesLayeredPane = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        resTableScrollPane = new javax.swing.JScrollPane();
        resTableSales = new javax.swing.JTable();
        purchasesLayeredPane = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        resTableScrollPane1 = new javax.swing.JScrollPane();
        resTablePurchases = new javax.swing.JTable();
        remove = new javax.swing.JButton();
        update = new javax.swing.JButton();
        more = new javax.swing.JButton();

        setBackground(new java.awt.Color(235, 255, 255));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        tableLayeredPane.setBackground(new java.awt.Color(235, 255, 255));

        jLabel2.setBackground(new java.awt.Color(235, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/MyPanels/show/Bundle"); // NOI18N
        jLabel2.setText(bundle.getString("ShowOrders.jLabel2.text")); // NOI18N

        resTableSales.setAutoCreateRowSorter(true);
        resTableSales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Number", "Shift Manager ID", "Shift Manager Name", "Shift Manager Country", "Shift Manager City", "Shift Manager Street", "Shift Manager House Number", "Shift Manager ZIP Code", "Shift Manager Birthday", "Shift Manager Employment Date", "Hourly Wage", "Extra Wage", "Manufacturer Name", "Manufacturer Country", "Manufacturer City", "Manufacturer Street", "Manufacturer House Number", "Manufacturer ZIP Code", "Profit Percentage", "Order Due Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resTableSales.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
                try{
                    resTableSales.getValueAt(resTableSales.getSelectedRow(), 0);
                    resTablePurchases.getSelectionModel().clearSelection();

                }
                catch (IndexOutOfBoundsException e){

                }
            }
        });
        resTableSales.setSelectionBackground(new java.awt.Color(76, 188, 188));
        resTableSales.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        resTableSales.getTableHeader().setReorderingAllowed(false);
        resTableScrollPane.setViewportView(resTableSales);

        jLabel1.setBackground(new java.awt.Color(235, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(bundle.getString("ShowOrders.jLabel1.text")); // NOI18N

        resTablePurchases.setAutoCreateRowSorter(true);
        resTablePurchases.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Number", "Manufacturer Name", "Manufacturer Country", "Manufacturer City", "Manufacturer Street", "Manufacturer House Number", "Manufacturer ZIP Code", "Profit Percentage", "Shift Manager ID", "Shift Manager Name", "Shift Manager Country", "Shift Manager City", "Shift Manager Street", "Shift Manager House Number", "Shift Manager ZIP Code", "Shift Manager Birthday", "Shift Manager Employment Date", "Hourly Wage", "Extra Wage", "Order Due Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resTablePurchases.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
                try{
                    resTablePurchases.getValueAt(resTablePurchases.getSelectedRow(), 0);
                    resTableSales.getSelectionModel().clearSelection();

                }
                catch (IndexOutOfBoundsException e){

                }
            }
        });
        resTablePurchases.setSelectionBackground(new java.awt.Color(76, 188, 188));
        resTablePurchases.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        resTablePurchases.getTableHeader().setReorderingAllowed(false);
        resTableScrollPane1.setViewportView(resTablePurchases);

        purchasesLayeredPane.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        purchasesLayeredPane.setLayer(resTableScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout purchasesLayeredPaneLayout = new javax.swing.GroupLayout(purchasesLayeredPane);
        purchasesLayeredPane.setLayout(purchasesLayeredPaneLayout);
        purchasesLayeredPaneLayout.setHorizontalGroup(
            purchasesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(purchasesLayeredPaneLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(purchasesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(purchasesLayeredPaneLayout.createSequentialGroup()
                        .addComponent(resTableScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        purchasesLayeredPaneLayout.setVerticalGroup(
            purchasesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(purchasesLayeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resTableScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        remove.setBackground(new java.awt.Color(0, 102, 102));
        remove.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        remove.setForeground(new java.awt.Color(255, 255, 255));
        remove.setText(bundle.getString("ShowOrders.remove.text")); // NOI18N
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(0, 102, 102));
        update.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText(bundle.getString("ShowOrders.update.text")); // NOI18N

        more.setBackground(new java.awt.Color(0, 102, 102));
        more.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        more.setForeground(new java.awt.Color(255, 255, 255));
        more.setText(bundle.getString("ShowOrders.more.text")); // NOI18N
        more.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moreMouseClicked(evt);
            }
        });

        salesLayeredPane.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        salesLayeredPane.setLayer(resTableScrollPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        salesLayeredPane.setLayer(purchasesLayeredPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        salesLayeredPane.setLayer(remove, javax.swing.JLayeredPane.DEFAULT_LAYER);
        salesLayeredPane.setLayer(update, javax.swing.JLayeredPane.DEFAULT_LAYER);
        salesLayeredPane.setLayer(more, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout salesLayeredPaneLayout = new javax.swing.GroupLayout(salesLayeredPane);
        salesLayeredPane.setLayout(salesLayeredPaneLayout);
        salesLayeredPaneLayout.setHorizontalGroup(
            salesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesLayeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(purchasesLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, salesLayeredPaneLayout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(update)
                .addGap(155, 155, 155)
                .addComponent(remove)
                .addGap(155, 155, 155)
                .addComponent(more)
                .addGap(45, 45, 45))
        );
        salesLayeredPaneLayout.setVerticalGroup(
            salesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesLayeredPaneLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(purchasesLayeredPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(salesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remove)
                    .addComponent(update)
                    .addComponent(more))
                .addContainerGap())
        );

        tableLayeredPane.setLayer(salesLayeredPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout tableLayeredPaneLayout = new javax.swing.GroupLayout(tableLayeredPane);
        tableLayeredPane.setLayout(tableLayeredPaneLayout);
        tableLayeredPaneLayout.setHorizontalGroup(
            tableLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableLayeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(salesLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 81, Short.MAX_VALUE))
        );
        tableLayeredPaneLayout.setVerticalGroup(
            tableLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableLayeredPaneLayout.createSequentialGroup()
                .addComponent(salesLayeredPane)
                .addGap(384, 384, 384))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableLayeredPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tableLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        view.ShowDataOrders(resTableSales,resTablePurchases,um.getLanguageComboBox());
    }//GEN-LAST:event_formComponentShown

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        boolean bool=false;
        if (resTableSales.getSelectedRow()==-1 && resTablePurchases.getSelectedRow()==-1){
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, "You must select an order from a table!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "עליך לבחור הזמנה מאחת הטבלאות!");
        }
        else if (resTableSales.getSelectedRow()!=-1 && resTablePurchases.getSelectedRow()==-1)
        {
            Object[] options = {"Yes","No"};
              Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Removing confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות הסרה",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);  
              if (n==0)
              {
            bool=view.controller.removeOrder((int) resTableSales.getValueAt(resTableSales.getSelectedRow(), 0));
              if (bool==true)
              {
                  Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                  JOptionPane.showMessageDialog(null, "Order removed successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "ההזמנה הוסרה בהצלחה!");
                  view.ShowDataOrders(resTableSales,resTablePurchases,um.getLanguageComboBox());
              }
              else{
                  Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                  JOptionPane.showMessageDialog(null, "                           Order was not removed!\n Please make sure that it contains neither vehicles nor parts");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "ההזמנה לא הוסרה!                 \n אנא ודא כי ההזמנה אינה מכילה רכבים וחלקים!");
              }
              }
        }
        else if (resTableSales.getSelectedRow()==-1 && resTablePurchases.getSelectedRow()!=-1)
            {
            Object[] options = {"Yes","No"};
            Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Removing confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות הסרה",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);  
              if (n==0)
              {
            bool=view.controller.removeOrder((int) resTablePurchases.getValueAt(resTablePurchases.getSelectedRow(), 0));
              if (bool==true)
              {
                   Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                  JOptionPane.showMessageDialog(null, "Order removed successfully!");
             else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "ההזמנה הוסרה בהצלחה!");
                  view.ShowDataOrders(resTableSales,resTablePurchases,um.getLanguageComboBox());
              }
              else{
                  Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                  JOptionPane.showMessageDialog(null, "                           Order was not removed!\n Please make sure that it contains neither vehicles nor parts");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "ההזמנה לא הוסרה!                 \n אנא ודא כי ההזמנה אינה מכילה רכבים וחלקים!");
              }
              }
        }
        else if (resTableSales.getSelectedRow()!=-1 && resTablePurchases.getSelectedRow()!=-1){
            Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, "You may only select one order at a time!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "עליך לבחור רק הזמנה אחת!");
        }
    }//GEN-LAST:event_removeActionPerformed

    private void moreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moreMouseClicked

    }//GEN-LAST:event_moreMouseClicked

    public JTable getResTablePurchases() {
        return resTablePurchases;
    }

    public JTable getResTableSales() {
        return resTableSales;
    }

    public JButton getUpdate() {
        return update;
    }
    public JButton getMore(){
        return more;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public JLabel getjLabel2() {
        return jLabel2;
    }

    public JButton getRemove() {
        return remove;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton more;
    private javax.swing.JLayeredPane purchasesLayeredPane;
    private javax.swing.JButton remove;
    private javax.swing.JTable resTablePurchases;
    private javax.swing.JTable resTableSales;
    private javax.swing.JScrollPane resTableScrollPane;
    private javax.swing.JScrollPane resTableScrollPane1;
    private javax.swing.JLayeredPane salesLayeredPane;
    private javax.swing.JLayeredPane tableLayeredPane;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
