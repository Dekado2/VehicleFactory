/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.MyPanels;

import java.awt.Color;
import java.awt.Toolkit;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import model.AbstractEmployee;
import model.Shift;
import model.ShiftManager;
import model.Worker;
import view.InputCheck;
import view.UserMenu;
import view.ViewLogic;

/**
 *
 *
 */
public class AddShift extends javax.swing.JPanel {
private static ViewLogic view;
private UserMenu um;
    /**
     * Creates new form AddShift
     */
    public AddShift(UserMenu um) {
        initComponents();
        view=ViewLogic.getInstance();
        this.um=um;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_AddShift = new javax.swing.JPanel();
        smLabel = new javax.swing.JLabel();
        addPanel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        startingTimeLabel = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        dayComboBox = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        monthComboBox = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        yearComboBox = new javax.swing.JComboBox<>();
        jSeparator15 = new javax.swing.JSeparator();
        smText = new javax.swing.JTextField();
        timeComboBox = new javax.swing.JComboBox<>();
        timeLabel = new javax.swing.JLabel();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        Panel_AddShift.setBackground(new java.awt.Color(235, 255, 255));

        smLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        smLabel.setForeground(new java.awt.Color(87, 84, 84));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/MyPanels/Bundle"); // NOI18N
        smLabel.setText(bundle.getString("AddShift.smLabel.text")); // NOI18N

        addPanel.setBackground(new java.awt.Color(204, 204, 204));
        addPanel.setForeground(new java.awt.Color(255, 255, 255));
        addPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addPanelMouseExited(evt);
            }
        });
        DocumentListener docListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                emptyFields(smText,addPanel);
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                emptyFields(smText,addPanel);
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                emptyFields(smText,addPanel);
            }
        };
        smText.getDocument().addDocumentListener(docListener);

        jLabel25.setFont(new java.awt.Font("Aharoni", 0, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText(bundle.getString("AddShift.jLabel25.text")); // NOI18N

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(76, 76, 76))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(11, 11, 11))
        );

        startingTimeLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        startingTimeLabel.setForeground(new java.awt.Color(87, 84, 84));
        startingTimeLabel.setText(bundle.getString("AddShift.startingTimeLabel.text")); // NOI18N

        jLabel31.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(87, 84, 84));
        jLabel31.setText(bundle.getString("AddShift.jLabel31.text")); // NOI18N

        dayComboBox.setBackground(new java.awt.Color(235, 255, 255));
        dayComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dayComboBox.setForeground(new java.awt.Color(87, 84, 84));
        dayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dayComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayComboBoxActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(87, 84, 84));
        jLabel30.setText(bundle.getString("AddShift.jLabel30.text")); // NOI18N

        monthComboBox.setBackground(new java.awt.Color(235, 255, 255));
        monthComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        monthComboBox.setForeground(new java.awt.Color(87, 84, 84));
        monthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", " " }));
        monthComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        monthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthComboBoxActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(87, 84, 84));
        jLabel32.setText(bundle.getString("AddShift.jLabel32.text")); // NOI18N

        yearComboBox.setBackground(new java.awt.Color(235, 255, 255));
        yearComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        yearComboBox.setForeground(new java.awt.Color(87, 84, 84));
        yearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924", "1923", "1922", "1921", "1920", "1919", "1918", "1917", "1916", "1915", "1914", "1913", "1912", "1911", "1910", "1909", "1908", "1907", "1906", "1905", "1904", "1903", "1902", "1901", "1900" }));
        yearComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        yearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearComboBoxActionPerformed(evt);
            }
        });

        jSeparator15.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator15.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N

        smText.setBackground(new java.awt.Color(235, 255, 255));
        smText.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        smText.setBorder(null);
        smText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smTextActionPerformed(evt);
            }
        });

        timeComboBox.setBackground(new java.awt.Color(235, 255, 255));
        timeComboBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        timeComboBox.setForeground(new java.awt.Color(87, 84, 84));
        timeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00:00", "08:00", "16:00" }));
        timeComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        timeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeComboBoxActionPerformed(evt);
            }
        });

        timeLabel.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(87, 84, 84));
        timeLabel.setText(bundle.getString("AddShift.timeLabel.text")); // NOI18N

        javax.swing.GroupLayout Panel_AddShiftLayout = new javax.swing.GroupLayout(Panel_AddShift);
        Panel_AddShift.setLayout(Panel_AddShiftLayout);
        Panel_AddShiftLayout.setHorizontalGroup(
            Panel_AddShiftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_AddShiftLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_AddShiftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_AddShiftLayout.createSequentialGroup()
                        .addComponent(startingTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addGroup(Panel_AddShiftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Panel_AddShiftLayout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(timeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Panel_AddShiftLayout.createSequentialGroup()
                        .addComponent(smLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Panel_AddShiftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Panel_AddShiftLayout.createSequentialGroup()
                                .addComponent(smText)
                                .addGap(1, 1, 1))
                            .addGroup(Panel_AddShiftLayout.createSequentialGroup()
                                .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(30, Short.MAX_VALUE))))))
        );
        Panel_AddShiftLayout.setVerticalGroup(
            Panel_AddShiftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_AddShiftLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(Panel_AddShiftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(smLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_AddShiftLayout.createSequentialGroup()
                        .addComponent(smText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(Panel_AddShiftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startingTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayComboBox)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearComboBox)
                    .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeComboBox))
                .addGap(79, 79, 79)
                .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_AddShift, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_AddShift, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayComboBoxActionPerformed

    private void monthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthComboBoxActionPerformed

    private void yearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearComboBoxActionPerformed

    private void smTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_smTextActionPerformed

    private void addPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseClicked
            boolean bool;
            Color c=new Color(204,204,204);
     if (!addPanel.getBackground().equals(c))
     {
            String str=dayComboBox.getSelectedItem().toString() + "/" + monthComboBox.getSelectedItem().toString() + "/" + yearComboBox.getSelectedItem().toString() + "T" + timeComboBox.getSelectedItem().toString();
            Date d=InputCheck.TryConvertingStringtoDate(str);
            Calendar cal=InputCheck.CalendarGetTimeDate(d);
            if (d==null || cal==null){
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                JOptionPane.showMessageDialog(null, "Invalid Date!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "תאריך שגוי!");
            }
            else
            {
                Object[] options = {"Yes","No"};
              Object[] hebOptions = {"כן","לא"};
            int n=0;
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?","Adding confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,options[1]);
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              n = JOptionPane.showOptionDialog(null, "האם אתה בטוח שברצונך להמשיך?","אימות הוספה",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,hebOptions,hebOptions[1]);    
              if (n==0)
              {
            bool=view.controller.addShift(cal,smText.getText());
            if (bool==true)
            {
                Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
            JOptionPane.showMessageDialog(null, "Shift added successfully!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "המשמרת הוספה בהצלחה!");
             smText.setText("");
             dayComboBox.setSelectedIndex(0);
             monthComboBox.setSelectedIndex(0);
             yearComboBox.setSelectedIndex(0);
             timeComboBox.setSelectedIndex(0);
            }
             else
             {
                Shift shift=view.model.getShifts().get(cal);
                AbstractEmployee sm=view.model.getEmployees().get(smText.getText());
                if (shift!=null)
                {
                    Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                  JOptionPane.showMessageDialog(null, "Shift at " + cal.getTime().toString() + " already exists!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "המשמרת ב " + cal.getTime().toString() + " כבר קיימת!");
                }
                else if (shift==null && sm==null)
                {
                    Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                  JOptionPane.showMessageDialog(null, "Shift Manager " + smText.getText() + " does not exist!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, "מנהל משמרת " + smText.getText() + " אינו קיים!");
                  smText.grabFocus();
                }
                else if (shift==null && !(sm instanceof ShiftManager)){
                    Toolkit.getDefaultToolkit().beep();
            if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
                    JOptionPane.showMessageDialog(null, smText.getText() + " is not a Shift Manager!");
            else if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
                JOptionPane.showMessageDialog(null, smText.getText() + " הוא אינו מנהל משמרת!");
                    smText.grabFocus();
                }
             }
            }
           }
          }
    }//GEN-LAST:event_addPanelMouseClicked

    private void addPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseEntered
        view.AddMouseEnter(addPanel);
    }//GEN-LAST:event_addPanelMouseEntered

    private void addPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseExited
       view.AddMouseExit(addPanel);
    }//GEN-LAST:event_addPanelMouseExited

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        smText.setText("");
        dayComboBox.setSelectedIndex(0);
        monthComboBox.setSelectedIndex(0);
        yearComboBox.setSelectedIndex(0);
        timeComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_formComponentHidden

    private void timeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeComboBoxActionPerformed

private void emptyFields(JTextField field, JPanel add){
             Color c=null;
             if (field.getText().isEmpty())
             {
                 c=new Color(204,204,204);
                add.setBackground(c);
             }
                else
             {
                 c=new Color(0,102,102);
                add.setBackground(c);
             }
    }

    public JLabel getjLabel25() {
        return jLabel25;
    }

    public JLabel getjLabel30() {
        return jLabel30;
    }

    public JLabel getjLabel31() {
        return jLabel31;
    }

    public JLabel getjLabel32() {
        return jLabel32;
    }

    public JLabel getSmLabel() {
        return smLabel;
    }

    public JLabel getStartingTimeLabel() {
        return startingTimeLabel;
    }

    public JLabel getTimeLabel() {
        return timeLabel;
    }

public JPanel getPanel_AddShift() {
        return Panel_AddShift;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel_AddShift;
    private javax.swing.JPanel addPanel;
    private javax.swing.JComboBox<String> dayComboBox;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JComboBox<String> monthComboBox;
    private javax.swing.JLabel smLabel;
    private javax.swing.JTextField smText;
    private javax.swing.JLabel startingTimeLabel;
    private javax.swing.JComboBox<String> timeComboBox;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JComboBox<String> yearComboBox;
    // End of variables declaration//GEN-END:variables
}
