/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Reports;

import java.awt.event.KeyEvent;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import view.InputCheck;
import view.UserMenu;
import view.ViewLogic;

/**
 *
 *
 */
public class GetAllEmployeesOrderedBySalaryInMonth extends javax.swing.JInternalFrame {
    private static ViewLogic view;
    private UserMenu um;
    
    /**
     * Creates new form GetAllWarehousesInManufacturerCountry
     */
    public GetAllEmployeesOrderedBySalaryInMonth() {
        initComponents();
        view=ViewLogic.getInstance();
    }

    public GetAllEmployeesOrderedBySalaryInMonth(UserMenu um) {
        initComponents();
        view=ViewLogic.getInstance();
        this.um=um;
        languageOpening();
         um.getLanguageComboBox().addActionListener(new java.awt.event.ActionListener(){
         public void actionPerformed(java.awt.event.ActionEvent evt) {
             languageActionPerformed(evt);
         }
  });
          
    }
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the
     * Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        monthDateText = new javax.swing.JTextField();
        monthDateLabel = new javax.swing.JLabel();
        run = new javax.swing.JButton();
        directionLabel = new javax.swing.JLabel();
        tableLayeredPane = new javax.swing.JLayeredPane();
        resTableScrollPane2 = new javax.swing.JScrollPane();
        resTable = new javax.swing.JTable();
        export = new javax.swing.JButton();
        ascendingRButton = new javax.swing.JRadioButton();
        descendingRButton = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(235, 255, 255));
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/Reports/Bundle"); // NOI18N
        monthDateText.setToolTipText(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.monthDateText.toolTipText")); // NOI18N
        monthDateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthDateTextActionPerformed(evt);
            }
        });

        monthDateLabel.setText(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.monthDateLabel.text")); // NOI18N
        monthDateLabel.setToolTipText(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.monthDateLabel.toolTipText")); // NOI18N

        run.setText(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.run.text")); // NOI18N
        run.setToolTipText(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.run.toolTipText")); // NOI18N
        run.setEnabled(false);
        run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runActionPerformed(evt);
            }
        });
        run.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                runKeyPressed(evt);
            }
        });
        DocumentListener docListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                emptyFields(monthDateText,run);
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                emptyFields(monthDateText,run);

            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                emptyFields(monthDateText,run);
            }
        };
        monthDateText.getDocument().addDocumentListener(docListener);

        directionLabel.setText(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.directionLabel.text")); // NOI18N

        tableLayeredPane.setEnabled(false);
        tableLayeredPane.setVisible(false);

        resTable.setAutoCreateRowSorter(true);
        resTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Country", "City", "Street", "House Number", "ZIP Code", "Birthday", "Employment Date", "Hourly Wage", "Extra Wage", "Monthly Salary", "Warehouse Number", "Warehouse Country", "Warehouse City", "Warehouse Street", "Warehouse House Number", "Warehouse ZIP Code", "Max Parts Stored", "Max Vehicles Stored", "Current Number of Parts"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resTable.getTableHeader().setReorderingAllowed(false);
        resTableScrollPane2.setViewportView(resTable);
        if (resTable.getColumnModel().getColumnCount() > 0) {
            resTable.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title0")); // NOI18N
            resTable.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title1")); // NOI18N
            resTable.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title2")); // NOI18N
            resTable.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title3")); // NOI18N
            resTable.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title4")); // NOI18N
            resTable.getColumnModel().getColumn(5).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title5")); // NOI18N
            resTable.getColumnModel().getColumn(6).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title6")); // NOI18N
            resTable.getColumnModel().getColumn(7).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title7")); // NOI18N
            resTable.getColumnModel().getColumn(8).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title8")); // NOI18N
            resTable.getColumnModel().getColumn(9).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title9")); // NOI18N
            resTable.getColumnModel().getColumn(10).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title10")); // NOI18N
            resTable.getColumnModel().getColumn(11).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title11")); // NOI18N
            resTable.getColumnModel().getColumn(12).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title12")); // NOI18N
            resTable.getColumnModel().getColumn(13).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title13")); // NOI18N
            resTable.getColumnModel().getColumn(14).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title14")); // NOI18N
            resTable.getColumnModel().getColumn(15).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title15")); // NOI18N
            resTable.getColumnModel().getColumn(16).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title16")); // NOI18N
            resTable.getColumnModel().getColumn(17).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title17")); // NOI18N
            resTable.getColumnModel().getColumn(18).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title18")); // NOI18N
            resTable.getColumnModel().getColumn(19).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title19")); // NOI18N
            resTable.getColumnModel().getColumn(20).setHeaderValue(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.resTable.columnModel.title20")); // NOI18N
        }

        export.setText(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.export.text")); // NOI18N
        export.setToolTipText(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.export.toolTipText")); // NOI18N
        export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportActionPerformed(evt);
            }
        });
        export.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                exportKeyPressed(evt);
            }
        });

        tableLayeredPane.setLayer(resTableScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        tableLayeredPane.setLayer(export, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout tableLayeredPaneLayout = new javax.swing.GroupLayout(tableLayeredPane);
        tableLayeredPane.setLayout(tableLayeredPaneLayout);
        tableLayeredPaneLayout.setHorizontalGroup(
            tableLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableLayeredPaneLayout.createSequentialGroup()
                .addGroup(tableLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tableLayeredPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(resTableScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1064, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tableLayeredPaneLayout.createSequentialGroup()
                        .addGap(497, 497, 497)
                        .addComponent(export)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        tableLayeredPaneLayout.setVerticalGroup(
            tableLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tableLayeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resTableScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(export)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        buttonGroup1.add(ascendingRButton);
        ascendingRButton.setText(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.ascendingRButton.text")); // NOI18N
        ascendingRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ascendingRButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(descendingRButton);
        descendingRButton.setText(bundle.getString("GetAllEmployeesOrderedBySalaryInMonth.descendingRButton.text")); // NOI18N
        descendingRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descendingRButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(monthDateLabel)
                .addGap(63, 63, 63)
                .addComponent(monthDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(directionLabel)
                .addGap(39, 39, 39)
                .addComponent(ascendingRButton)
                .addGap(39, 39, 39)
                .addComponent(descendingRButton)
                .addGap(81, 81, 81)
                .addComponent(run, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tableLayeredPane)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthDateLabel)
                    .addComponent(run)
                    .addComponent(directionLabel)
                    .addComponent(ascendingRButton)
                    .addComponent(descendingRButton))
                .addGap(18, 18, 18)
                .addComponent(tableLayeredPane))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void monthDateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthDateTextActionPerformed
        if (run.isEnabled())
        runActionPerformed(evt);
    }//GEN-LAST:event_monthDateTextActionPerformed

    private void runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runActionPerformed
        String d=monthDateText.getText();
        ClearTableRows();
        view.GetAllEmployeesOrderedBySalaryInMonthQueryRun(d,ascendingRButton,descendingRButton, resTable, tableLayeredPane,um.getLanguageComboBox());
    }//GEN-LAST:event_runActionPerformed

    private void runKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_runKeyPressed
         int key=evt.getKeyCode();
          ActionEvent ae = new ActionEvent(evt.getSource(), evt.getID(), evt.paramString());
          if(key==KeyEvent.VK_ENTER && run.isEnabled())        
          runActionPerformed(ae);
            run.getInputMap().put(KeyStroke.getKeyStroke("SPACE"), "none");
        
    }//GEN-LAST:event_runKeyPressed

    private void ascendingRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ascendingRButtonActionPerformed
         if (ascendingRButton.isSelected() && !monthDateText.getText().isEmpty())
             run.setEnabled(true);
    }//GEN-LAST:event_ascendingRButtonActionPerformed

    private void descendingRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descendingRButtonActionPerformed
         if (descendingRButton.isSelected() && !monthDateText.getText().isEmpty())
             run.setEnabled(true);
    }//GEN-LAST:event_descendingRButtonActionPerformed

    private void exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportActionPerformed
        try {
            String str=monthDateText.getText();
            str=InputCheck.IllegalFileChars(str);
            view.writeCSVfile(resTable, "GetAllEmployeesOrderdBySalaryInMonth", str);
            view.ExportSuccess("GetAllEmployeesOrderdBySalaryInMonth", str,um.getLanguageComboBox());
        } catch (IOException ex) {
            view.ExportFailed(um.getLanguageComboBox());
        } catch (ClassNotFoundException ex) {
            view.ExportFailed(um.getLanguageComboBox());
        } catch (SQLException ex) {
            view.ExportFailed(um.getLanguageComboBox());
        }
    }//GEN-LAST:event_exportActionPerformed

    private void exportKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_exportKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_exportKeyPressed
private void emptyFields(JTextField text ,JButton run){
             if (!text.getText().isEmpty() && (ascendingRButton.isSelected() || descendingRButton.isSelected()))
                run.setEnabled(true);
             else
                run.setEnabled(false);
    }
    /**
     * @param args the command line arguments
     */
private void ClearTableRows()
{
    DefaultTableModel dm = (DefaultTableModel) resTable.getModel();
        int rowCount = dm.getRowCount();
        for (int i=rowCount-1; i>=0 ; i--)
            dm.removeRow(i);
}
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GetAllEmployeesOrderedBySalaryInMonth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GetAllEmployeesOrderedBySalaryInMonth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GetAllEmployeesOrderedBySalaryInMonth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GetAllEmployeesOrderedBySalaryInMonth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GetAllEmployeesOrderedBySalaryInMonth().setVisible(true);
            }
        });
    }

   private void languageOpening()
{
    if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              {
                  Locale l = new Locale("iw", "IL");
                  ResourceBundle r = ResourceBundle.getBundle("view.Reports/Bundle",l);
                  descendingRButton.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.descendingRButton.text"));
                  ascendingRButton.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.ascendingRButton.text"));
                  directionLabel.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.directionLabel.text"));
                  monthDateLabel.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.monthDateLabel.text"));
                  directionLabel.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.directionLabel.text"));
                  monthDateText.setToolTipText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.monthDateText.toolTipText"));
                  export.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.export.text")); 
                  export.setToolTipText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.export.toolTipText")); 
                  run.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.run.text"));
                  hebTableHeaders();
              }
             else if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              {
                  Locale l = new Locale("en", "US");
                  ResourceBundle r = ResourceBundle.getBundle("view.Reports/Bundle",l);
                  descendingRButton.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.descendingRButton.text"));
                  ascendingRButton.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.ascendingRButton.text"));
                  directionLabel.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.directionLabel.text"));
                  monthDateLabel.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.monthDateLabel.text"));
                  directionLabel.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.directionLabel.text"));
                  monthDateText.setToolTipText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.monthDateText.toolTipText"));
                  export.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.export.text")); 
                  export.setToolTipText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.export.toolTipText")); 
                  run.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.run.text"));
                  engTableHeaders();
              }
} 
    
 private void languageActionPerformed(java.awt.event.ActionEvent evt) {  
    if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              {
                  Locale l = new Locale("iw", "IL");
                  ResourceBundle r = ResourceBundle.getBundle("view.Reports/Bundle",l);
                  descendingRButton.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.descendingRButton.text"));
                  ascendingRButton.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.ascendingRButton.text"));
                  directionLabel.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.directionLabel.text"));
                  monthDateLabel.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.monthDateLabel.text"));
                  directionLabel.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.directionLabel.text"));
                  monthDateText.setToolTipText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.monthDateText.toolTipText"));
                  export.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.export.text")); 
                  export.setToolTipText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.export.toolTipText")); 
                  run.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.run.text"));
                  hebTableHeaders();
                  this.setTitle("השג את כל העובדים ממויינים לפי שכר בחודש");
                  resTable.setAutoResizeMode(2);
        
              }
             else if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              {
                  Locale l = new Locale("en", "US");
                  ResourceBundle r = ResourceBundle.getBundle("view.Reports/Bundle",l);
                  descendingRButton.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.descendingRButton.text"));
                  ascendingRButton.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.ascendingRButton.text"));
                  directionLabel.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.directionLabel.text"));
                  monthDateLabel.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.monthDateLabel.text"));
                  directionLabel.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.directionLabel.text"));
                  monthDateText.setToolTipText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.monthDateText.toolTipText"));
                  export.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.export.text")); 
                  export.setToolTipText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.export.toolTipText")); 
                  run.setText(r.getString("GetAllEmployeesOrderedBySalaryInMonth.run.text"));
                  engTableHeaders();
                  this.setTitle("Get All Employees Ordered By Salary In Month");
                  resTable.setAutoResizeMode(2);
              }
}  
   
private void engTableHeaders()
{
    String[]engHeaders={"ID","Name", "Country", "City" , "Street" , "House Number", "ZIP Code", "Birthday","Employment Date","Hourly Wage","Extra Wage","Monthly Salary","Warehouse Number","Warehouse Country","Warehouse City","Warehouse Street","Warehouse House Number","Warehouse ZIP Code", "Max Parts Stored", "Max Vehicles Stored", "Current Number of Parts"};
    for (int i=0;i<engHeaders.length;i++)
    resTable.getTableHeader().getColumnModel().getColumn(i).setHeaderValue(engHeaders[i]);
}

private void hebTableHeaders()
{
    String[]hebHeaders={"מספר עובד","שם", "מדינה", "עיר" , "רחוב" , "מספר בית", "מיקוד", "תאריך לידה","תאריך תחילת ההעסקה","שכר שעתי","שכר בונוס","שכר חודשי","מספר המחסן","מדינת המחסן","עיר המחסן","רחוב המחסן","מספר בית המחסן","מיקוד המחסן", "מכסת חלקים לאחסון", "מכסת רכבים לאחסון", "כמות החלקים הנוכחית"};
    for (int i=0;i<hebHeaders.length;i++)
    resTable.getTableHeader().getColumnModel().getColumn(i).setHeaderValue(hebHeaders[i]);
}   
   
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ascendingRButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton descendingRButton;
    private javax.swing.JLabel directionLabel;
    private javax.swing.JButton export;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel monthDateLabel;
    private javax.swing.JTextField monthDateText;
    private javax.swing.JTable resTable;
    private javax.swing.JScrollPane resTableScrollPane2;
    private javax.swing.JButton run;
    private javax.swing.JLayeredPane tableLayeredPane;
    // End of variables declaration//GEN-END:variables
}
