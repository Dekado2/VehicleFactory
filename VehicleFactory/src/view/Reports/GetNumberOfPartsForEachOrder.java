/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Reports;

import java.awt.event.KeyEvent;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import view.InputCheck;
import view.UserMenu;
import view.ViewLogic;

/**
 *
 *
 */
public class GetNumberOfPartsForEachOrder extends javax.swing.JInternalFrame {
    private static ViewLogic view;
    private UserMenu um;
    /**
     * Creates new form GetAllWarehousesInManufacturerCountry
     */
    public GetNumberOfPartsForEachOrder() {
        initComponents();
        view=ViewLogic.getInstance();
        ClearTableRows();
        view.GetNumberOfPartsForEachOrderQueryRun(resTableSales, resTablePurchases,tableLayeredPane,salesLayeredPane,purchasesLayeredPane,um.getLanguageComboBox());
    }

    public GetNumberOfPartsForEachOrder(UserMenu um) {
        initComponents();
        view=ViewLogic.getInstance();
        ClearTableRows();
        view.GetNumberOfPartsForEachOrderQueryRun(resTableSales, resTablePurchases,tableLayeredPane,salesLayeredPane,purchasesLayeredPane,um.getLanguageComboBox());
         this.um=um;
        languageOpening();
         um.getLanguageComboBox().addActionListener(new java.awt.event.ActionListener(){
         public void actionPerformed(java.awt.event.ActionEvent evt) {
             languageActionPerformed(evt);
         }
  });
          
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the
     * Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tableLayeredPane = new javax.swing.JLayeredPane();
        purchasesLayeredPane = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        resTableScrollPane1 = new javax.swing.JScrollPane();
        resTablePurchases = new javax.swing.JTable();
        exportPurchases = new javax.swing.JButton();
        salesLayeredPane = new javax.swing.JLayeredPane();
        resTableScrollPane = new javax.swing.JScrollPane();
        resTableSales = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        exportSales = new javax.swing.JButton();

        setBackground(new java.awt.Color(235, 255, 255));
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/Reports/Bundle"); // NOI18N
        jLabel1.setText(bundle.getString("GetNumberOfPartsForEachOrder.jLabel1.text")); // NOI18N

        resTablePurchases.setAutoCreateRowSorter(true);
        resTablePurchases.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Number", "Manufacturer Name", "Manufacturer Country", "Manufacturer City", "Manufacturer Street", "Manufacturer House Number", "Manufacturer ZIP Code", "Profit Percentage", "Shift Manager ID", "Shift Manager Name", "Shift Manager Country", "Shift Manager City", "Shift Manager Street", "Shift Manager House Number", "Shift Manager ZIP Code", "Shift Manager Birthday", "Shift Manager Employment Date", "Hourly Wage", "Extra Wage", "Order Due Date", "Number of Parts"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resTablePurchases.getTableHeader().setReorderingAllowed(false);
        resTableScrollPane1.setViewportView(resTablePurchases);
        if (resTablePurchases.getColumnModel().getColumnCount() > 0) {
            resTablePurchases.getColumnModel().getColumn(0).setPreferredWidth(50);
            resTablePurchases.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title0")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title1")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title2")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title3")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title4")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(5).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title5")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(6).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title6")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(7).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title7")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(8).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title8")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(9).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title9")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(10).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title10")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(11).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title11")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(12).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title12")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(13).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title13")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(14).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title14")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(15).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title15")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(16).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title16")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(17).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title17")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(18).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title18")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(19).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title19")); // NOI18N
            resTablePurchases.getColumnModel().getColumn(20).setPreferredWidth(50);
            resTablePurchases.getColumnModel().getColumn(20).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTablePurchases.columnModel.title20")); // NOI18N
        }

        exportPurchases.setText(bundle.getString("GetNumberOfPartsForEachOrder.exportPurchases.text")); // NOI18N
        exportPurchases.setToolTipText(bundle.getString("GetNumberOfPartsForEachOrder.exportPurchases.toolTipText")); // NOI18N
        exportPurchases.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportPurchasesActionPerformed(evt);
            }
        });

        purchasesLayeredPane.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        purchasesLayeredPane.setLayer(resTableScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        purchasesLayeredPane.setLayer(exportPurchases, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout purchasesLayeredPaneLayout = new javax.swing.GroupLayout(purchasesLayeredPane);
        purchasesLayeredPane.setLayout(purchasesLayeredPaneLayout);
        purchasesLayeredPaneLayout.setHorizontalGroup(
            purchasesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(purchasesLayeredPaneLayout.createSequentialGroup()
                .addGroup(purchasesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(purchasesLayeredPaneLayout.createSequentialGroup()
                        .addComponent(exportPurchases)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(resTableScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1060, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        purchasesLayeredPaneLayout.setVerticalGroup(
            purchasesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(purchasesLayeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(purchasesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exportPurchases))
                .addGap(18, 18, 18)
                .addComponent(resTableScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        resTableSales.setAutoCreateRowSorter(true);
        resTableSales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Number", "Shift Manager ID", "Shift Manager Name", "Shift Manager Country", "Shift Manager City", "Shift Manager Street", "Shift Manager House Number", "Shift Manager ZIP Code", "Shift Manager Birthday", "Shift Manager Employment Date", "Hourly Wage", "Extra Wage", "Manufacturer Name", "Manufacturer Country", "Manufacturer City", "Manufacturer Street", "Manufacturer House Number", "Manufacturer ZIP Code", "Profit Percentage", "Order Due Date", "Number of Parts"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resTableSales.getTableHeader().setReorderingAllowed(false);
        resTableScrollPane.setViewportView(resTableSales);
        if (resTableSales.getColumnModel().getColumnCount() > 0) {
            resTableSales.getColumnModel().getColumn(0).setPreferredWidth(50);
            resTableSales.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title0")); // NOI18N
            resTableSales.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title1")); // NOI18N
            resTableSales.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title2")); // NOI18N
            resTableSales.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title3")); // NOI18N
            resTableSales.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title4")); // NOI18N
            resTableSales.getColumnModel().getColumn(5).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title5")); // NOI18N
            resTableSales.getColumnModel().getColumn(6).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title6")); // NOI18N
            resTableSales.getColumnModel().getColumn(7).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title7")); // NOI18N
            resTableSales.getColumnModel().getColumn(8).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title8")); // NOI18N
            resTableSales.getColumnModel().getColumn(9).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title9")); // NOI18N
            resTableSales.getColumnModel().getColumn(10).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title10")); // NOI18N
            resTableSales.getColumnModel().getColumn(11).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title11")); // NOI18N
            resTableSales.getColumnModel().getColumn(12).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title12")); // NOI18N
            resTableSales.getColumnModel().getColumn(13).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title13")); // NOI18N
            resTableSales.getColumnModel().getColumn(14).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title14")); // NOI18N
            resTableSales.getColumnModel().getColumn(15).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title15")); // NOI18N
            resTableSales.getColumnModel().getColumn(16).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title16")); // NOI18N
            resTableSales.getColumnModel().getColumn(17).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title17")); // NOI18N
            resTableSales.getColumnModel().getColumn(18).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title18")); // NOI18N
            resTableSales.getColumnModel().getColumn(19).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title19")); // NOI18N
            resTableSales.getColumnModel().getColumn(20).setPreferredWidth(50);
            resTableSales.getColumnModel().getColumn(20).setHeaderValue(bundle.getString("GetNumberOfPartsForEachOrder.resTableSales.columnModel.title20")); // NOI18N
        }

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(bundle.getString("GetNumberOfPartsForEachOrder.jLabel2.text")); // NOI18N

        exportSales.setText(bundle.getString("GetNumberOfPartsForEachOrder.exportSales.text")); // NOI18N
        exportSales.setToolTipText(bundle.getString("GetNumberOfPartsForEachOrder.exportSales.toolTipText")); // NOI18N
        exportSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportSalesActionPerformed(evt);
            }
        });
        exportSales.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                exportSalesKeyPressed(evt);
            }
        });

        salesLayeredPane.setLayer(resTableScrollPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        salesLayeredPane.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        salesLayeredPane.setLayer(exportSales, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout salesLayeredPaneLayout = new javax.swing.GroupLayout(salesLayeredPane);
        salesLayeredPane.setLayout(salesLayeredPaneLayout);
        salesLayeredPaneLayout.setHorizontalGroup(
            salesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesLayeredPaneLayout.createSequentialGroup()
                .addGroup(salesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(salesLayeredPaneLayout.createSequentialGroup()
                        .addComponent(exportSales)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(resTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1062, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        salesLayeredPaneLayout.setVerticalGroup(
            salesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesLayeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exportSales))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tableLayeredPane.setLayer(purchasesLayeredPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        tableLayeredPane.setLayer(salesLayeredPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout tableLayeredPaneLayout = new javax.swing.GroupLayout(tableLayeredPane);
        tableLayeredPane.setLayout(tableLayeredPaneLayout);
        tableLayeredPaneLayout.setHorizontalGroup(
            tableLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableLayeredPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(tableLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(salesLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(purchasesLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        tableLayeredPaneLayout.setVerticalGroup(
            tableLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableLayeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(salesLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(purchasesLayeredPane)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tableLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exportSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportSalesActionPerformed
        try {
            view.writeCSVfile(resTableSales, "GetNumberOfPartsForEachOrder", "Sales");
            view.ExportSuccess("GetNumberOfPartsForEachOrder", "Sales",um.getLanguageComboBox());
        } catch (IOException ex) {
            view.ExportFailed(um.getLanguageComboBox());
        } catch (ClassNotFoundException ex) {
            view.ExportFailed(um.getLanguageComboBox());
        } catch (SQLException ex) {
            view.ExportFailed(um.getLanguageComboBox());
        }
    }//GEN-LAST:event_exportSalesActionPerformed

    private void exportSalesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_exportSalesKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_exportSalesKeyPressed

    private void exportPurchasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportPurchasesActionPerformed
         try {
            view.writeCSVfile(resTablePurchases, "GetNumberOfPartsForEachOrder", "Purchases");
            view.ExportSuccess("GetNumberOfPartsForEachOrder", "Purchases",um.getLanguageComboBox());
        } catch (IOException ex) {
            view.ExportFailed(um.getLanguageComboBox());
        } catch (ClassNotFoundException ex) {
            view.ExportFailed(um.getLanguageComboBox());
        } catch (SQLException ex) {
            view.ExportFailed(um.getLanguageComboBox());
        }
    }//GEN-LAST:event_exportPurchasesActionPerformed

    /**
     * @param args the command line arguments
     */
private void ClearTableRows()
{
    DefaultTableModel dm = (DefaultTableModel) resTableSales.getModel();
        int rowCount = dm.getRowCount();
        for (int i=rowCount-1; i>=0 ; i--)
            dm.removeRow(i);
         DefaultTableModel dmTwo = (DefaultTableModel) resTablePurchases.getModel();
        int rowCountTwo = dmTwo.getRowCount();
        for (int i=rowCountTwo-1; i>=0 ; i--)
            dmTwo.removeRow(i);
}

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GetNumberOfPartsForEachOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GetNumberOfPartsForEachOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GetNumberOfPartsForEachOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GetNumberOfPartsForEachOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GetNumberOfPartsForEachOrder().setVisible(true);
               
            }
        });
    }

    private void languageOpening()
{
    if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              {
                  Locale l = new Locale("iw", "IL");
                  ResourceBundle r = ResourceBundle.getBundle("view.Reports/Bundle",l);
                  jLabel2.setText(r.getString("GetNumberOfPartsForEachOrder.jLabel2.text"));
                  exportSales.setText(r.getString("GetNumberOfPartsForEachOrder.exportSales.text"));
                  exportPurchases.setToolTipText(r.getString("GetNumberOfPartsForEachOrder.exportPurchases.toolTipText"));
                  exportSales.setToolTipText(r.getString("GetNumberOfPartsForEachOrder.exportSales.toolTipText")); 
                  jLabel1.setText(r.getString("GetNumberOfPartsForEachOrder.jLabel1.text"));
                  exportPurchases.setText(r.getString("GetNumberOfPartsForEachOrder.exportPurchases.text"));
                  hebTableHeaders();
              }
             else if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              {
                  Locale l = new Locale("en", "US");
                  ResourceBundle r = ResourceBundle.getBundle("view.Reports/Bundle",l);
                  jLabel2.setText(r.getString("GetNumberOfPartsForEachOrder.jLabel2.text"));
                  exportSales.setText(r.getString("GetNumberOfPartsForEachOrder.exportSales.text"));
                  exportPurchases.setToolTipText(r.getString("GetNumberOfPartsForEachOrder.exportPurchases.toolTipText"));
                  exportSales.setToolTipText(r.getString("GetNumberOfPartsForEachOrder.exportSales.toolTipText")); 
                  jLabel1.setText(r.getString("GetNumberOfPartsForEachOrder.jLabel1.text"));
                  exportPurchases.setText(r.getString("GetNumberOfPartsForEachOrder.exportPurchases.text"));
                  engTableHeaders();
              }
}
    
    private void languageActionPerformed(java.awt.event.ActionEvent evt) {  
    if (um.getLanguageComboBox().getSelectedItem().equals("עברית"))
              {
                  Locale l = new Locale("iw", "IL");
                  ResourceBundle r = ResourceBundle.getBundle("view.Reports/Bundle",l);
                  jLabel2.setText(r.getString("GetNumberOfPartsForEachOrder.jLabel2.text"));
                  exportSales.setText(r.getString("GetNumberOfPartsForEachOrder.exportSales.text"));
                  exportPurchases.setToolTipText(r.getString("GetNumberOfPartsForEachOrder.exportPurchases.toolTipText"));
                  exportSales.setToolTipText(r.getString("GetNumberOfPartsForEachOrder.exportSales.toolTipText")); 
                  jLabel1.setText(r.getString("GetNumberOfPartsForEachOrder.jLabel1.text"));
                  exportPurchases.setText(r.getString("GetNumberOfPartsForEachOrder.exportPurchases.text"));
                  hebTableHeaders();
                  ClearTableRows();
                  view.GetNumberOfPartsForEachOrderQueryRun(resTableSales, resTablePurchases,tableLayeredPane,salesLayeredPane,purchasesLayeredPane,um.getLanguageComboBox());
                  this.setTitle("השג את מספר החלקים בכל הזמנה");
              }
             else if (um.getLanguageComboBox().getSelectedItem().equals("English") || um.getLanguageComboBox().getSelectedItem().equals("Choose a language"))
              {
                  Locale l = new Locale("en", "US");
                  ResourceBundle r = ResourceBundle.getBundle("view.Reports/Bundle",l);
                  jLabel2.setText(r.getString("GetNumberOfPartsForEachOrder.jLabel2.text"));
                  exportSales.setText(r.getString("GetNumberOfPartsForEachOrder.exportSales.text"));
                  exportPurchases.setToolTipText(r.getString("GetNumberOfPartsForEachOrder.exportPurchases.toolTipText"));
                  exportSales.setToolTipText(r.getString("GetNumberOfPartsForEachOrder.exportSales.toolTipText")); 
                  jLabel1.setText(r.getString("GetNumberOfPartsForEachOrder.jLabel1.text"));
                  exportPurchases.setText(r.getString("GetNumberOfPartsForEachOrder.exportPurchases.text"));
                  engTableHeaders();
                  ClearTableRows();
                  view.GetNumberOfPartsForEachOrderQueryRun(resTableSales, resTablePurchases,tableLayeredPane,salesLayeredPane,purchasesLayeredPane,um.getLanguageComboBox());
                  this.setTitle("Get Number of Parts For Each Order");
              }
}
    
    private void engTableHeaders()
{
    String[]engHeadersSales={"Order Number","Shift Manager ID","Shift Manager Name", "Shift Manager Country", "Shift Manager City" , "Shift Manager Street" , "Shift Manager House Number", "Shift Manager ZIP Code", "Shift Manager Birthday", "Shift Manager Employment Date", "Hourly Wage" , "Extra Wage","Manufacturer Name", "Manufacturer Country" , "Manufacturer City", "Manufacturer Street", "Manufacturer House Number", "Manufacturer ZIP Code", "Profit Percentage","Due Date","Number of Parts"};
    for (int i=0;i<engHeadersSales.length;i++)
    resTableSales.getTableHeader().getColumnModel().getColumn(i).setHeaderValue(engHeadersSales[i]);
    String[]engHeadersPurchases={"Order Number","Manufacturer Name", "Manufacturer Country" , "Manufacturer City", "Manufacturer Street", "Manufacturer House Number", "Manufacturer ZIP Code", "Profit Percentage","Shift Manager ID","Shift Manager Name", "Shift Manager Country", "Shift Manager City" , "Shift Manager Street" , "Shift Manager House Number", "Shift Manager ZIP Code", "Shift Manager Birthday","Shift Manager Employment Date","Hourly Wage","Extra Wage","Due Date","Number of Parts"};
    for (int i=0;i<engHeadersPurchases.length;i++)
    resTablePurchases.getTableHeader().getColumnModel().getColumn(i).setHeaderValue(engHeadersPurchases[i]);
}

private void hebTableHeaders()
{
    String[]hebHeadersSales={"מספר הזמנה","מספר מנהל המשמרת","שם מנהל המשמרת", "מדינת מנהל המשמרת", "עיר מנהל המשמרת" , "רחוב מנהל המשמרת" , "מספר הבית של מנהל המשמרת", "מיקוד מנהל המשמרת", "תאריך הלידה של מנהל המשמרת", "תאריך תחילת ההעסקה של מנהל המשמרת", "שכר שעתי" , "שכר בונוס","שם היצרן", "מדינת היצרן" , "עיר היצרן", "רחוב היצרן", "מספר הבית של היצרן", "מיקוד היצרן", "אחוז הרווח","תאריך יעד","כמות חלקים"};
    for (int i=0;i<hebHeadersSales.length;i++)
    resTableSales.getTableHeader().getColumnModel().getColumn(i).setHeaderValue(hebHeadersSales[i]);
    String[]hebHeadersPurchases={"מספר הזמנה","שם היצרן", "מדינת היצרן" , "עיר היצרן", "רחוב היצרן", "מספר הבית של היצרן", "מיקוד היצרן", "אחוז הרווח","מספר מנהל המשמרת","שם מנהל המשמרת", "מדינת מנהל המשמרת", "עיר מנהל המשמרת" , "רחוב מנהל המשמרת" , "מספר הבית של מנהל המשמרת", "מיקוד מנהל המשמרת", "תאריך הלידה של מנהל המשמרת", "תאריך תחילת ההעסקה של מנהל המשמרת", "שכר שעתי" , "שכר בונוס","תאריך יעד","כמות חלקים"};
    for (int i=0;i<hebHeadersPurchases.length;i++)
    resTablePurchases.getTableHeader().getColumnModel().getColumn(i).setHeaderValue(hebHeadersPurchases[i]);
}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exportPurchases;
    private javax.swing.JButton exportSales;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLayeredPane purchasesLayeredPane;
    private javax.swing.JTable resTablePurchases;
    private javax.swing.JTable resTableSales;
    private javax.swing.JScrollPane resTableScrollPane;
    private javax.swing.JScrollPane resTableScrollPane1;
    private javax.swing.JLayeredPane salesLayeredPane;
    private javax.swing.JLayeredPane tableLayeredPane;
    // End of variables declaration//GEN-END:variables
}
