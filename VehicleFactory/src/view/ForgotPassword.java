/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;


import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.JButton;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import utils.Constants;
import utils.MyFileLogWriter;

/**
 *
 * @author Bozo
 */
public class ForgotPassword extends javax.swing.JFrame {
private static ViewLogic view;

    /**
     * Creates new form ForgotPassword
     */
    public ForgotPassword() {
        initComponents();
        view=ViewLogic.getInstance();
        Username.grabFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the
     * Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPaneForgotPassword = new javax.swing.JDesktopPane();
        secretAnswer = new javax.swing.JTextField();
        secretQuestionLabel = new javax.swing.JLabel();
        secretAnswerLabel = new javax.swing.JLabel();
        Username = new javax.swing.JTextField();
        userLabel = new javax.swing.JLabel();
        Proceed = new javax.swing.JButton();
        secretQuestion = new javax.swing.JTextField();
        Back = new javax.swing.JButton();
        languageComboBox = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(233, 233, 238));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setMaximumSize(new java.awt.Dimension(430, 355));
        setMinimumSize(new java.awt.Dimension(430, 355));
        setName("forgotPasswordFrame"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        desktopPaneForgotPassword.setBackground(new java.awt.Color(2, 35, 66));
        desktopPaneForgotPassword.setForeground(new java.awt.Color(102, 153, 255));
        desktopPaneForgotPassword.setMaximumSize(new java.awt.Dimension(430, 355));
        desktopPaneForgotPassword.setMinimumSize(new java.awt.Dimension(430, 355));

        secretAnswer.setVisible(false);
        secretAnswer.setBackground(new java.awt.Color(2, 35, 66));
        secretAnswer.setForeground(new java.awt.Color(255, 255, 255));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/Bundle"); // NOI18N
        secretAnswer.setToolTipText(bundle.getString("ForgotPassword.secretAnswer.toolTipText")); // NOI18N
        secretAnswer.setBorder(null);
        secretAnswer.setCaretColor(new java.awt.Color(255, 255, 255));
        secretAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secretAnswerActionPerformed(evt);
            }
        });

        secretQuestionLabel.setVisible(false);
        secretQuestionLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        secretQuestionLabel.setForeground(new java.awt.Color(255, 255, 255));
        secretQuestionLabel.setText(bundle.getString("ForgotPassword.secretQuestionLabel.text")); // NOI18N

        secretAnswerLabel.setVisible(false);
        secretAnswerLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        secretAnswerLabel.setForeground(new java.awt.Color(255, 255, 255));
        secretAnswerLabel.setText(bundle.getString("ForgotPassword.secretAnswerLabel.text")); // NOI18N

        Username.setBackground(new java.awt.Color(2, 35, 66));
        Username.setForeground(new java.awt.Color(255, 255, 255));
        Username.setToolTipText(bundle.getString("ForgotPassword.Username.toolTipText")); // NOI18N
        Username.setBorder(null);
        Username.setCaretColor(new java.awt.Color(255, 255, 255));
        Username.setMaximumSize(new java.awt.Dimension(283, 20));
        Username.setMinimumSize(new java.awt.Dimension(283, 20));
        Username.setPreferredSize(new java.awt.Dimension(283, 20));
        Username.setSize(283,20);
        UIManager.put("ToolTip.background", Color.WHITE);
        Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameActionPerformed(evt);
            }
        });

        userLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        userLabel.setForeground(new java.awt.Color(255, 255, 255));
        userLabel.setText(bundle.getString("ForgotPassword.userLabel.text")); // NOI18N

        Proceed.setBackground(new java.awt.Color(2, 51, 99));
        Proceed.setForeground(new java.awt.Color(255, 255, 255));
        Proceed.setText(bundle.getString("ForgotPassword.Proceed.text")); // NOI18N
        Proceed.setEnabled(false);
        DocumentListener docListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                emptyFields(Username,secretAnswer,Proceed);
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                emptyFields(Username,secretAnswer,Proceed);
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                emptyFields(Username,secretAnswer,Proceed);
            }
        };
        Username.getDocument().addDocumentListener(docListener);
        secretAnswer.getDocument().addDocumentListener(docListener);
        Proceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProceedActionPerformed(evt);
            }
        });
        Proceed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ProceedKeyPressed(evt);
            }
        });

        secretQuestion.setVisible(false);
        secretQuestion.setBackground(new java.awt.Color(2, 35, 66));
        secretQuestion.setForeground(new java.awt.Color(255, 255, 255));
        secretQuestion.setToolTipText(bundle.getString("ForgotPassword.secretQuestion.toolTipText")); // NOI18N
        secretQuestion.setBorder(null);
        secretQuestion.setCaretColor(new java.awt.Color(255, 255, 255));
        secretQuestion.setEnabled(false);

        Back.setBackground(new java.awt.Color(76, 188, 188));
        Back.setForeground(new java.awt.Color(255, 255, 255));
        Back.setText(bundle.getString("ForgotPassword.Back.text")); // NOI18N
        Back.setMaximumSize(new java.awt.Dimension(71, 23));
        Back.setMinimumSize(new java.awt.Dimension(71, 23));
        Back.setPreferredSize(new java.awt.Dimension(71, 23));
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        Back.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BackKeyPressed(evt);
            }
        });

        languageComboBox.setBackground(new java.awt.Color(2, 35, 66));
        languageComboBox.setForeground(new java.awt.Color(255, 255, 255));
        languageComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a language", "English", "עברית" }));
        languageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                languageComboBoxActionPerformed(evt);
            }
        });

        jSeparator2.setVisible(false);

        jSeparator3.setVisible(false);

        desktopPaneForgotPassword.setLayer(secretAnswer, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPaneForgotPassword.setLayer(secretQuestionLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPaneForgotPassword.setLayer(secretAnswerLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPaneForgotPassword.setLayer(Username, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPaneForgotPassword.setLayer(userLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPaneForgotPassword.setLayer(Proceed, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPaneForgotPassword.setLayer(secretQuestion, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPaneForgotPassword.setLayer(Back, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPaneForgotPassword.setLayer(languageComboBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPaneForgotPassword.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPaneForgotPassword.setLayer(jSeparator2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPaneForgotPassword.setLayer(jSeparator3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout desktopPaneForgotPasswordLayout = new javax.swing.GroupLayout(desktopPaneForgotPassword);
        desktopPaneForgotPassword.setLayout(desktopPaneForgotPasswordLayout);
        desktopPaneForgotPasswordLayout.setHorizontalGroup(
            desktopPaneForgotPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, desktopPaneForgotPasswordLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(Proceed)
                .addGap(120, 120, 120))
            .addGroup(desktopPaneForgotPasswordLayout.createSequentialGroup()
                .addGroup(desktopPaneForgotPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(desktopPaneForgotPasswordLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(languageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(desktopPaneForgotPasswordLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(desktopPaneForgotPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(desktopPaneForgotPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(secretQuestionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(secretAnswerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(desktopPaneForgotPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator3)
                            .addComponent(jSeparator1)
                            .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(secretQuestion)
                            .addComponent(secretAnswer)
                            .addComponent(jSeparator2))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        desktopPaneForgotPasswordLayout.setVerticalGroup(
            desktopPaneForgotPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(desktopPaneForgotPasswordLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(desktopPaneForgotPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(desktopPaneForgotPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secretQuestionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secretQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(desktopPaneForgotPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secretAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secretAnswerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(desktopPaneForgotPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Proceed)
                    .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(languageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPaneForgotPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPaneForgotPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ProceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProceedActionPerformed

        boolean bool;
        if (!secretQuestion.isVisible() && !secretAnswer.isVisible())
        {
            bool=view.IsValidUser(Username.getText(),languageComboBox);
        if (bool==true)
            {
            String sq;
            sq=view.RetrieveSecretQuestion(Username.getText());
            secretQuestion.setText(sq);
            Proceed.setEnabled(false);
            Username.setEnabled(false);
            secretQuestion.setVisible(true);
            secretAnswer.setVisible(true);
            secretQuestionLabel.setVisible(true);
            secretAnswerLabel.setVisible(true);
            secretAnswer.grabFocus();
            Proceed.setBackground(new Color(2,51,99));
            }
        }
        else if (secretQuestion.isVisible() && secretAnswer.isVisible())
          {
            view.QAVerification(Username.getText(),secretAnswer.getText(),this,languageComboBox);  
          }
    }//GEN-LAST:event_ProceedActionPerformed

    private void UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameActionPerformed
        if (Proceed.isEnabled())
        ProceedActionPerformed(evt);
    }//GEN-LAST:event_UsernameActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        view.LoginScreen(languageComboBox);
        view.BackForgotPassword(this);
    }//GEN-LAST:event_BackActionPerformed

    private void secretAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secretAnswerActionPerformed
        if (Proceed.isEnabled())
        ProceedActionPerformed(evt);
    }//GEN-LAST:event_secretAnswerActionPerformed

    private void ProceedKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProceedKeyPressed
          int key=evt.getKeyCode();
          ActionEvent ae = new ActionEvent(evt.getSource(), evt.getID(), evt.paramString());
          if(key==KeyEvent.VK_ENTER && Proceed.isEnabled())        
          ProceedActionPerformed(ae);
        Proceed.getInputMap().put(KeyStroke.getKeyStroke("SPACE"), "none");
       
    }//GEN-LAST:event_ProceedKeyPressed

    private void BackKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BackKeyPressed
        int key=evt.getKeyCode();
          ActionEvent ae = new ActionEvent(evt.getSource(), evt.getID(), evt.paramString());
          if(key==KeyEvent.VK_ENTER)        
          BackActionPerformed(ae);
        Back.getInputMap().put(KeyStroke.getKeyStroke("SPACE"), "none");
    }//GEN-LAST:event_BackKeyPressed

    private void languageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_languageComboBoxActionPerformed

        if (languageComboBox.getSelectedItem().equals("עברית"))
        {
            Locale l = new Locale("iw", "IL");
            ResourceBundle r = ResourceBundle.getBundle("view/Bundle",l);
            userLabel.setText(r.getString("ForgotPassword.userLabel.text"));
            secretQuestionLabel.setText(r.getString("ForgotPassword.secretQuestionLabel.text"));
            Proceed.setText(r.getString("ForgotPassword.Proceed.text"));
            Back.setText(r.getString("ForgotPassword.Back.text"));
            secretAnswerLabel.setText(r.getString("ForgotPassword.secretAnswerLabel.text"));
            Username.setToolTipText(r.getString("ForgotPassword.Username.toolTipText"));
            secretQuestion.setToolTipText(r.getString("ForgotPassword.secretQuestion.toolTipText"));
            secretAnswer.setToolTipText(r.getString("ForgotPassword.secretAnswer.toolTipText"));
        }
        else if (languageComboBox.getSelectedItem().equals("English") || languageComboBox.getSelectedItem().equals("Choose a language"))
        {
            Locale l = new Locale("en", "US");
            ResourceBundle r = ResourceBundle.getBundle("view/Bundle",l);
            userLabel.setText(r.getString("ForgotPassword.userLabel.text"));
            secretQuestionLabel.setText(r.getString("ForgotPassword.secretQuestionLabel.text"));
            Proceed.setText(r.getString("ForgotPassword.Proceed.text"));
            Back.setText(r.getString("ForgotPassword.Back.text"));
            secretAnswerLabel.setText(r.getString("ForgotPassword.secretAnswerLabel.text"));
            Username.setToolTipText(r.getString("ForgotPassword.Username.toolTipText"));
            secretQuestion.setToolTipText(r.getString("ForgotPassword.secretQuestion.toolTipText"));
            secretAnswer.setToolTipText(r.getString("ForgotPassword.secretAnswer.toolTipText"));
        }
        
    }//GEN-LAST:event_languageComboBoxActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            view.serialization(Constants.Ser_FileName);
        } catch (IOException ex) {
        }
        MyFileLogWriter.saveLogFile();
    }//GEN-LAST:event_formWindowClosing
    private void emptyFields(JTextField Username, JTextField secretAnswer,JButton Proceed){
            if (Username.isEnabled())
             {
             if (Username.getText().length()<4){
                Proceed.setEnabled(false);
                Proceed.setBackground(new Color(2,51,99));
             }
             else{
                Proceed.setEnabled(true);
                Proceed.setBackground(new Color(76,188,188)); 
             }
             }
            else
             {
                if (secretAnswer.getText().length()<1){
                Proceed.setEnabled(false);
                Proceed.setBackground(new Color(2,51,99));
                }
                else{
                Proceed.setEnabled(true);
                Proceed.setBackground(new Color(76,188,188));
                }
             }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ForgotPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Proceed;
    private javax.swing.JTextField Username;
    private javax.swing.JDesktopPane desktopPaneForgotPassword;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    protected javax.swing.JComboBox<String> languageComboBox;
    private javax.swing.JTextField secretAnswer;
    private javax.swing.JLabel secretAnswerLabel;
    private javax.swing.JTextField secretQuestion;
    private javax.swing.JLabel secretQuestionLabel;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
